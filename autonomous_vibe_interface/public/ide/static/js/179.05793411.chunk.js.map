{"version":3,"file":"static/js/179.05793411.chunk.js","mappings":"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","sources":["services/ComponentGenerator.ts"],"sourcesContent":["interface ComponentTemplate {\n  name: string;\n  code: string;\n  props: Record<string, any>;\n  dependencies: string[];\n}\n\ninterface ComponentBundle {\n  id: string;\n  name: string;\n  code: string;\n  props: Record<string, any>;\n  dependencies: string[];\n  generatedAt: number;\n}\n\nexport class ComponentGenerator {\n  // Natural language mapping for better component matching\n  private componentMap: Record<string, string> = {\n    'hero section': 'gradient-card',\n    'hero': 'gradient-card',\n    'cta button': 'glowing-button',\n    'call to action': 'glowing-button',\n    'submit button': 'gradient-button',\n    'glass button': 'glass-button',\n    'glowing button': 'glowing-button',\n    'gradient button': 'gradient-button',\n    'outline button': 'outline-button',\n    'floating button': 'floating-button',\n    'navigation': 'glass-card',\n    'navbar': 'glass-card',\n    'pricing card': 'gradient-card',\n    'feature card': 'hover-card'\n  };\n\n  private templates: Record<string, ComponentTemplate> = {\n    // React Bits Button Components with Tailwind\n    'glowing-button': {\n      name: 'GlowingButton',\n      code: `\n        const GlowingButton = ({ text = 'Click Me', onClick = () => alert('Button clicked!') }) => {\n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg transition-all duration-300 shadow-lg shadow-purple-500/50 hover:shadow-xl hover:shadow-purple-500/60',\n            style: {\n              animation: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite'\n            }\n          }, text);\n        };\n      `,\n      props: {\n        text: 'Click Me'\n      },\n      dependencies: []\n    },\n    \n    'gradient-button': {\n      name: 'GradientButton',\n      code: `\n        const GradientButton = ({ text = 'Gradient Magic', onClick = () => alert('Gradient button clicked!') }) => {\n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white font-medium rounded-lg transition-all duration-300 transform hover:scale-105'\n          }, text);\n        };\n      `,\n      props: {\n        text: 'Gradient Magic'\n      },\n      dependencies: []\n    },\n    \n    'outline-button': {\n      name: 'OutlineButton',\n      code: `\n        const OutlineButton = ({ text = 'Outline Style', onClick = () => alert('Outline button clicked!') }) => {\n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 border-2 border-purple-500 text-purple-600 hover:bg-purple-500 hover:text-white font-medium rounded-lg transition-all duration-300 shadow-lg'\n          }, text);\n        };\n      `,\n      props: {\n        text: 'Outline Style'\n      },\n      dependencies: []\n    },\n    \n    'glass-button': {\n      name: 'GlassButton', \n      code: `\n        const GlassButton = ({ text = 'Glass Effect', onClick = () => alert('Glass button clicked!') }) => {\n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 backdrop-blur-md border border-white/30 text-white font-medium rounded-lg transition-all duration-300 hover:bg-white/20 shadow-lg',\n            style: { \n              backgroundColor: 'rgba(139, 92, 246, 0.1)',\n              backdropFilter: 'blur(10px)'\n            }\n          }, text);\n        };\n      `,\n      props: {\n        text: 'Glass Effect'\n      },\n      dependencies: []\n    },\n    \n    'floating-button': {\n      name: 'FloatingButton',\n      code: `\n        const FloatingButton = ({ text = 'Floating', onClick = () => alert('Floating button clicked!') }) => {\n          const styles = {\n            animation: 'float 3s ease-in-out infinite'\n          };\n          \n          // Add keyframes dynamically\n          if (!document.getElementById('float-keyframes')) {\n            const style = document.createElement('style');\n            style.id = 'float-keyframes';\n            style.textContent = \\`\n              @keyframes float {\n                0%, 100% { transform: translateY(0px); }\n                50% { transform: translateY(-10px); }\n              }\n            \\`;\n            document.head.appendChild(style);\n          }\n          \n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 bg-purple-600 text-white font-medium rounded-full shadow-lg transition-all duration-300',\n            style: styles\n          }, text);\n        };\n      `,\n      props: {\n        text: 'Floating'\n      },\n      dependencies: []\n    },\n\n    // React Bits Card Components\n    'gradient-card': {\n      name: 'GradientCard',\n      code: `\n        const GradientCard = ({ \n          title = 'Welcome to Our Platform', \n          description = 'Build amazing applications with our powerful components and intuitive interface.',\n          buttonText = 'Get Started',\n          onClick = () => alert('Getting started!')\n        }) => {\n          return React.createElement('div', {\n            className: 'p-8 bg-gradient-to-br from-purple-100 to-pink-100 rounded-2xl border border-purple-200 shadow-xl'\n          }, [\n            React.createElement('h2', {\n              key: 'title',\n              className: 'text-3xl font-bold text-gray-900 mb-4'\n            }, title),\n            React.createElement('p', {\n              key: 'description',\n              className: 'text-gray-700 mb-6 text-lg leading-relaxed'\n            }, description),\n            React.createElement('button', {\n              key: 'button',\n              onClick: onClick,\n              className: 'px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all duration-300 transform hover:scale-105 shadow-lg'\n            }, buttonText)\n          ]);\n        };\n      `,\n      props: {\n        title: 'Welcome to Our Platform',\n        description: 'Build amazing applications with our powerful components and intuitive interface.',\n        buttonText: 'Get Started'\n      },\n      dependencies: []\n    },\n    \n    'glass-card': {\n      name: 'GlassCard',\n      code: `\n        const GlassCard = ({ \n          title = 'Glass Card', \n          description = 'Beautiful glassmorphism effect with backdrop blur'\n        }) => {\n          return React.createElement('div', {\n            className: 'p-6 backdrop-blur-md rounded-xl border border-white/30 shadow-2xl',\n            style: {\n              backgroundColor: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)'\n            }\n          }, [\n            React.createElement('h3', {\n              key: 'title',\n              className: 'text-2xl font-bold text-gray-900 mb-3'\n            }, title),\n            React.createElement('p', {\n              key: 'description',\n              className: 'text-gray-700'\n            }, description)\n          ]);\n        };\n      `,\n      props: {\n        title: 'Glass Card',\n        description: 'Beautiful glassmorphism effect with backdrop blur'\n      },\n      dependencies: []\n    },\n    \n    'hover-card': {\n      name: 'HoverCard',\n      code: `\n        const HoverCard = ({ \n          title = 'Interactive Card', \n          description = 'Hover for elevation effect'\n        }) => {\n          return React.createElement('div', {\n            className: 'p-6 bg-white rounded-xl border border-gray-200 transition-all duration-300 hover:shadow-2xl hover:-translate-y-1'\n          }, [\n            React.createElement('h3', {\n              key: 'title',\n              className: 'text-2xl font-bold text-gray-900 mb-3'\n            }, title),\n            React.createElement('p', {\n              key: 'description',\n              className: 'text-gray-600'\n            }, description)\n          ]);\n        };\n      `,\n      props: {\n        title: 'Interactive Card',\n        description: 'Hover for elevation effect'\n      },\n      dependencies: []\n    },\n\n    // Keep original button as fallback\n    button: {\n      name: 'Button',\n      code: `\n        const Button = ({ children, onClick, variant = 'primary', size = 'medium', disabled = false, ...props }) => {\n          const baseStyles = {\n            padding: size === 'small' ? '6px 12px' : size === 'large' ? '12px 24px' : '8px 16px',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: disabled ? 'not-allowed' : 'pointer',\n            fontSize: size === 'small' ? '12px' : size === 'large' ? '16px' : '14px',\n            fontWeight: '500',\n            fontFamily: 'inherit',\n            transition: 'all 0.2s ease',\n            opacity: disabled ? 0.6 : 1,\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '6px'\n          };\n          \n          const variants = {\n            primary: { \n              backgroundColor: '#0066cc', \n              color: 'white'\n            },\n            secondary: { \n              backgroundColor: '#f6f8fa', \n              color: '#24292f',\n              border: '1px solid #d1d9e0'\n            },\n            danger: { \n              backgroundColor: '#dc3545', \n              color: 'white'\n            }\n          };\n          \n          const handleClick = (e) => {\n            if (!disabled && onClick) {\n              onClick(e);\n            }\n          };\n          \n          const variantStyles = variants[variant] || variants.primary;\n          const finalStyles = { ...baseStyles, ...variantStyles };\n          \n          return React.createElement('button', {\n            style: finalStyles,\n            onClick: handleClick,\n            disabled,\n            ...props\n          }, children);\n        };\n      `,\n      props: { \n        children: 'Click me', \n        variant: 'primary',\n        size: 'medium',\n        disabled: false\n      },\n      dependencies: []\n    },\n    \n    card: {\n      name: 'Card',\n      code: `\n        const Card = ({ title, content, footer, shadow = true, padding = 'medium', ...props }) => {\n          const cardStyles = {\n            border: '1px solid #e1e5e9',\n            borderRadius: '8px',\n            padding: padding === 'small' ? '12px' : padding === 'large' ? '24px' : '16px',\n            backgroundColor: 'white',\n            boxShadow: shadow ? '0 1px 3px rgba(0,0,0,0.1)' : 'none',\n            fontFamily: 'inherit'\n          };\n          \n          const titleStyles = {\n            margin: '0 0 12px 0',\n            fontSize: '18px',\n            fontWeight: '600',\n            color: '#24292f'\n          };\n          \n          const contentStyles = {\n            marginBottom: footer ? '12px' : '0',\n            color: '#656d76',\n            lineHeight: '1.5'\n          };\n          \n          const footerStyles = {\n            fontSize: '12px',\n            color: '#8b949e',\n            borderTop: '1px solid #f6f8fa',\n            paddingTop: '12px',\n            marginTop: '12px'\n          };\n          \n          return React.createElement('div', { style: cardStyles, ...props }, [\n            title && React.createElement('h3', { key: 'title', style: titleStyles }, title),\n            content && React.createElement('div', { key: 'content', style: contentStyles }, content),\n            footer && React.createElement('div', { key: 'footer', style: footerStyles }, footer)\n          ].filter(Boolean));\n        };\n      `,\n      props: { \n        title: 'Card Title', \n        content: 'This is the card content area with some descriptive text.',\n        footer: 'Card footer',\n        shadow: true,\n        padding: 'medium'\n      },\n      dependencies: []\n    },\n    \n    input: {\n      name: 'Input',\n      code: `\n        const Input = ({ \n          label, \n          placeholder = '', \n          type = 'text', \n          value = '', \n          onChange, \n          error,\n          disabled = false,\n          ...props \n        }) => {\n          const containerStyles = {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '6px',\n            fontFamily: 'inherit'\n          };\n          \n          const labelStyles = {\n            fontSize: '14px',\n            fontWeight: '500',\n            color: '#24292f'\n          };\n          \n          const inputStyles = {\n            padding: '8px 12px',\n            border: error ? '1px solid #dc3545' : '1px solid #d1d9e0',\n            borderRadius: '6px',\n            fontSize: '14px',\n            fontFamily: 'inherit',\n            backgroundColor: disabled ? '#f6f8fa' : 'white',\n            color: disabled ? '#8b949e' : '#24292f',\n            outline: 'none',\n            transition: 'border-color 0.2s ease',\n            '&:focus': {\n              borderColor: error ? '#dc3545' : '#0066cc',\n              boxShadow: error ? '0 0 0 3px rgba(220, 53, 69, 0.1)' : '0 0 0 3px rgba(0, 102, 204, 0.1)'\n            }\n          };\n          \n          const errorStyles = {\n            fontSize: '12px',\n            color: '#dc3545'\n          };\n          \n          const handleChange = (e) => {\n            if (onChange && !disabled) {\n              onChange(e);\n            }\n          };\n          \n          return React.createElement('div', { style: containerStyles }, [\n            label && React.createElement('label', { key: 'label', style: labelStyles }, label),\n            React.createElement('input', {\n              key: 'input',\n              type,\n              placeholder,\n              value,\n              onChange: handleChange,\n              disabled,\n              style: inputStyles,\n              ...props\n            }),\n            error && React.createElement('span', { key: 'error', style: errorStyles }, error)\n          ].filter(Boolean));\n        };\n      `,\n      props: {\n        label: 'Email Address',\n        placeholder: 'Enter your email',\n        type: 'email',\n        value: '',\n        error: '',\n        disabled: false\n      },\n      dependencies: []\n    },\n    \n    alert: {\n      name: 'Alert',\n      code: `\n        const Alert = ({ \n          children, \n          variant = 'info', \n          title,\n          dismissible = false,\n          onDismiss,\n          ...props \n        }) => {\n          const variants = {\n            info: {\n              backgroundColor: '#f0f8ff',\n              borderColor: '#0066cc',\n              color: '#0066cc'\n            },\n            success: {\n              backgroundColor: '#f0fff4',\n              borderColor: '#28a745',\n              color: '#28a745'\n            },\n            warning: {\n              backgroundColor: '#fffbf0',\n              borderColor: '#ffc107',\n              color: '#856404'\n            },\n            danger: {\n              backgroundColor: '#fff5f5',\n              borderColor: '#dc3545',\n              color: '#dc3545'\n            }\n          };\n          \n          const alertStyles = {\n            padding: '12px 16px',\n            borderRadius: '6px',\n            border: \\`1px solid \\${variants[variant].borderColor}\\`,\n            backgroundColor: variants[variant].backgroundColor,\n            color: variants[variant].color,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: '8px',\n            fontFamily: 'inherit'\n          };\n          \n          const contentStyles = {\n            flex: 1\n          };\n          \n          const titleStyles = {\n            fontWeight: '600',\n            marginBottom: '4px'\n          };\n          \n          const dismissButtonStyles = {\n            background: 'none',\n            border: 'none',\n            color: 'inherit',\n            cursor: 'pointer',\n            fontSize: '16px',\n            padding: '0',\n            marginLeft: '8px',\n            opacity: 0.7,\n            '&:hover': { opacity: 1 }\n          };\n          \n          return React.createElement('div', { style: alertStyles, ...props }, [\n            React.createElement('div', { key: 'content', style: contentStyles }, [\n              title && React.createElement('div', { key: 'title', style: titleStyles }, title),\n              React.createElement('div', { key: 'children' }, children)\n            ]),\n            dismissible && React.createElement('button', {\n              key: 'dismiss',\n              style: dismissButtonStyles,\n              onClick: onDismiss,\n              'aria-label': 'Dismiss'\n            }, '×')\n          ]);\n        };\n      `,\n      props: {\n        children: 'This is an informational alert message.',\n        variant: 'info',\n        title: 'Information',\n        dismissible: true\n      },\n      dependencies: []\n    }\n  };\n  \n  async generateBasicComponent(description: string): Promise<ComponentBundle> {\n    const keywords = description.toLowerCase();\n    let template: ComponentTemplate | undefined;\n    \n    // Step 1: Check natural language mapping first\n    for (const [phrase, componentKey] of Object.entries(this.componentMap)) {\n      if (keywords.includes(phrase)) {\n        if (this.templates[componentKey]) {\n          template = this.templates[componentKey];\n          console.log(`Matched phrase \"${phrase}\" to component \"${componentKey}\"`);\n          break;\n        }\n      }\n    }\n    \n    // Step 2: If no natural language match, check for specific button types\n    if (!template) {\n      if (keywords.includes('glow') || keywords.includes('glowing')) {\n        template = this.templates['glowing-button'];\n      } else if (keywords.includes('gradient')) {\n        template = this.templates['gradient-button'];\n      } else if (keywords.includes('outline')) {\n        template = this.templates['outline-button'];\n      } else if (keywords.includes('glass')) {\n        template = this.templates['glass-button'];\n      } else if (keywords.includes('float') || keywords.includes('floating')) {\n        template = this.templates['floating-button'];\n      }\n    }\n    \n    // Step 3: Fall back to original keyword matching\n    if (!template) {\n      if (keywords.includes('button')) {\n        // If generic button requested, use gradient button for a modern look\n        template = this.templates['gradient-button'];\n      } else if (keywords.includes('card')) {\n        template = this.templates.card;\n      } else if (keywords.includes('input') || keywords.includes('form') || keywords.includes('field')) {\n        template = this.templates.input;\n      } else if (keywords.includes('alert') || keywords.includes('notification') || keywords.includes('message')) {\n        template = this.templates.alert;\n      } else {\n        // Default to gradient button for unknown components\n        template = this.templates['gradient-button'];\n      }\n    }\n    \n    // Template should always be defined at this point, but add safety check\n    if (!template) {\n      template = this.templates['gradient-button'];\n    }\n    \n    // Customize props based on description\n    const customProps = this.customizeProps(template.props, description);\n    \n    // Clean up the code by removing leading whitespace while preserving internal indentation\n    const lines = template.code.trim().split('\\n');\n    const minIndent = Math.min(...lines\n      .filter(line => line.trim().length > 0)\n      .map(line => line.match(/^(\\s*)/)?.[1].length || 0)\n    );\n    const cleanCode = lines\n      .map(line => line.substring(minIndent))\n      .join('\\n')\n      .trim();\n    \n    return {\n      id: `component_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n      name: template.name,\n      code: cleanCode,\n      props: customProps,\n      dependencies: template.dependencies,\n      generatedAt: Date.now()\n    };\n  }\n  \n  private customizeProps(baseProps: Record<string, any>, description: string): Record<string, any> {\n    const props = { ...baseProps };\n    const keywords = description.toLowerCase();\n    \n    // Customize button variants\n    if (keywords.includes('secondary')) {\n      props.variant = 'secondary';\n    } else if (keywords.includes('danger') || keywords.includes('delete') || keywords.includes('remove')) {\n      props.variant = 'danger';\n    }\n    \n    // Customize sizes\n    if (keywords.includes('small')) {\n      props.size = 'small';\n    } else if (keywords.includes('large') || keywords.includes('big')) {\n      props.size = 'large';\n    }\n    \n    // Customize alert variants\n    if (keywords.includes('success')) {\n      props.variant = 'success';\n      props.children = 'Operation completed successfully!';\n    } else if (keywords.includes('warning')) {\n      props.variant = 'warning';\n      props.children = 'Please review this information carefully.';\n    } else if (keywords.includes('error') || keywords.includes('danger')) {\n      props.variant = 'danger';\n      props.children = 'An error occurred. Please try again.';\n    }\n    \n    // Customize text content based on description\n    if (keywords.includes('login')) {\n      props.children = 'Login';\n    } else if (keywords.includes('submit')) {\n      props.children = 'Submit';\n    } else if (keywords.includes('save')) {\n      props.children = 'Save';\n    } else if (keywords.includes('cancel')) {\n      props.children = 'Cancel';\n      props.variant = 'secondary';\n    }\n    \n    return props;\n  }\n  \n  // Get available templates for help command\n  getAvailableTemplates(): string[] {\n    return Object.keys(this.templates);\n  }\n  \n  // Get template info for help\n  getTemplateInfo(templateName: string): ComponentTemplate | null {\n    return this.templates[templateName] || null;\n  }\n}\n\nexport const componentGenerator = new ComponentGenerator();\n\n// Helper function for terminal integration\nexport const generateBasicComponent = (description: string) => \n  componentGenerator.generateBasicComponent(description);"],"names":["ComponentGenerator","constructor","componentMap","templates","name","code","props","text","dependencies","title","description","buttonText","button","children","variant","size","disabled","card","content","footer","shadow","padding","input","label","placeholder","type","value","error","alert","dismissible","generateBasicComponent","keywords","toLowerCase","template","phrase","componentKey","Object","entries","this","includes","console","log","customProps","customizeProps","lines","trim","split","minIndent","Math","min","filter","line","length","map","_line$match","match","cleanCode","substring","join","id","Date","now","random","toString","substr","generatedAt","baseProps","getAvailableTemplates","keys","getTemplateInfo","templateName","componentGenerator"],"sourceRoot":""}