{"version":3,"file":"static/js/179.de06b775.chunk.js","mappings":"oNAgBO,MAAMA,EAAmBC,WAAAA,GAAA,KACtBC,UAA+C,CACrDC,OAAQ,CACNC,KAAM,SACNC,KAAM,qvDAmDNC,MAAO,CACLC,SAAU,WACVC,QAAS,UACTC,KAAM,SACNC,UAAU,GAEZC,aAAc,IAGhBC,KAAM,CACJR,KAAM,OACNC,KAAM,o9CAuCNC,MAAO,CACLO,MAAO,aACPC,QAAS,4DACTC,OAAQ,cACRC,QAAQ,EACRC,QAAS,UAEXN,aAAc,IAGhBO,MAAO,CACLd,KAAM,QACNC,KAAM,2kEAmENC,MAAO,CACLa,MAAO,gBACPC,YAAa,mBACbC,KAAM,QACNC,MAAO,GACPC,MAAO,GACPb,UAAU,GAEZC,aAAc,IAGhBa,MAAO,CACLpB,KAAM,QACNC,KAAM,k6EA+ENC,MAAO,CACLC,SAAU,0CACVC,QAAS,OACTK,MAAO,cACPY,aAAa,GAEfd,aAAc,IAEhB,CAEF,4BAAMe,CAAuBC,GAE3B,MAAMC,EAAWD,EAAYE,cAE7B,IAAIC,EAGFA,EADEF,EAASG,SAAS,UACTC,KAAK9B,UAAUC,OACjByB,EAASG,SAAS,QAChBC,KAAK9B,UAAUU,KACjBgB,EAASG,SAAS,UAAYH,EAASG,SAAS,SAAWH,EAASG,SAAS,SAC3EC,KAAK9B,UAAUgB,MACjBU,EAASG,SAAS,UAAYH,EAASG,SAAS,iBAAmBH,EAASG,SAAS,WACnFC,KAAK9B,UAAUsB,MAGfQ,KAAK9B,UAAUC,OAI5B,MAAM8B,EAAcD,KAAKE,eAAeJ,EAASxB,MAAOqB,GAExD,MAAO,CACLQ,GAAI,aAAaC,KAAKC,SAASC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KACpErC,KAAM0B,EAAS1B,KACfC,KAAMyB,EAASzB,KACfC,MAAO2B,EACPtB,aAAcmB,EAASnB,aACvB+B,YAAaN,KAAKC,MAEtB,CAEQH,cAAAA,CAAeS,EAAgChB,GACrD,MAAMrB,EAAQ,IAAKqC,GACbf,EAAWD,EAAYE,cAwC7B,OArCID,EAASG,SAAS,aACpBzB,EAAME,QAAU,aACPoB,EAASG,SAAS,WAAaH,EAASG,SAAS,WAAaH,EAASG,SAAS,aACzFzB,EAAME,QAAU,UAIdoB,EAASG,SAAS,SACpBzB,EAAMG,KAAO,SACJmB,EAASG,SAAS,UAAYH,EAASG,SAAS,UACzDzB,EAAMG,KAAO,SAIXmB,EAASG,SAAS,YACpBzB,EAAME,QAAU,UAChBF,EAAMC,SAAW,qCACRqB,EAASG,SAAS,YAC3BzB,EAAME,QAAU,UAChBF,EAAMC,SAAW,8CACRqB,EAASG,SAAS,UAAYH,EAASG,SAAS,aACzDzB,EAAME,QAAU,SAChBF,EAAMC,SAAW,wCAIfqB,EAASG,SAAS,SACpBzB,EAAMC,SAAW,QACRqB,EAASG,SAAS,UAC3BzB,EAAMC,SAAW,SACRqB,EAASG,SAAS,QAC3BzB,EAAMC,SAAW,OACRqB,EAASG,SAAS,YAC3BzB,EAAMC,SAAW,SACjBD,EAAME,QAAU,aAGXF,CACT,CAGAsC,qBAAAA,GACE,OAAOC,OAAOC,KAAKd,KAAK9B,UAC1B,CAGA6C,eAAAA,CAAgBC,GACd,OAAOhB,KAAK9B,UAAU8C,IAAiB,IACzC,EAGK,MAAMC,EAAqB,IAAIjD,EAGzB0B,EAA0BC,GACrCsB,EAAmBvB,uBAAuBC,E","sources":["services/ComponentGenerator.ts"],"sourcesContent":["interface ComponentTemplate {\n  name: string;\n  code: string;\n  props: Record<string, any>;\n  dependencies: string[];\n}\n\ninterface ComponentBundle {\n  id: string;\n  name: string;\n  code: string;\n  props: Record<string, any>;\n  dependencies: string[];\n  generatedAt: number;\n}\n\nexport class ComponentGenerator {\n  private templates: Record<string, ComponentTemplate> = {\n    button: {\n      name: 'Button',\n      code: `\n        const Button = ({ children, onClick, variant = 'primary', size = 'medium', disabled = false, ...props }) => {\n          const baseStyles = {\n            padding: size === 'small' ? '6px 12px' : size === 'large' ? '12px 24px' : '8px 16px',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: disabled ? 'not-allowed' : 'pointer',\n            fontSize: size === 'small' ? '12px' : size === 'large' ? '16px' : '14px',\n            fontWeight: '500',\n            fontFamily: 'inherit',\n            transition: 'all 0.2s ease',\n            opacity: disabled ? 0.6 : 1,\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '6px'\n          };\n          \n          const variants = {\n            primary: { \n              backgroundColor: '#0066cc', \n              color: 'white',\n              '&:hover': { backgroundColor: '#0052a3' }\n            },\n            secondary: { \n              backgroundColor: '#f6f8fa', \n              color: '#24292f',\n              border: '1px solid #d1d9e0',\n              '&:hover': { backgroundColor: '#f3f4f6' }\n            },\n            danger: { \n              backgroundColor: '#dc3545', \n              color: 'white',\n              '&:hover': { backgroundColor: '#c82333' }\n            }\n          };\n          \n          const handleClick = (e) => {\n            if (!disabled && onClick) {\n              onClick(e);\n            }\n          };\n          \n          return React.createElement('button', {\n            style: { ...baseStyles, ...variants[variant] },\n            onClick: handleClick,\n            disabled,\n            ...props\n          }, children);\n        };\n      `,\n      props: { \n        children: 'Click me', \n        variant: 'primary',\n        size: 'medium',\n        disabled: false\n      },\n      dependencies: []\n    },\n    \n    card: {\n      name: 'Card',\n      code: `\n        const Card = ({ title, content, footer, shadow = true, padding = 'medium', ...props }) => {\n          const cardStyles = {\n            border: '1px solid #e1e5e9',\n            borderRadius: '8px',\n            padding: padding === 'small' ? '12px' : padding === 'large' ? '24px' : '16px',\n            backgroundColor: 'white',\n            boxShadow: shadow ? '0 1px 3px rgba(0,0,0,0.1)' : 'none',\n            fontFamily: 'inherit'\n          };\n          \n          const titleStyles = {\n            margin: '0 0 12px 0',\n            fontSize: '18px',\n            fontWeight: '600',\n            color: '#24292f'\n          };\n          \n          const contentStyles = {\n            marginBottom: footer ? '12px' : '0',\n            color: '#656d76',\n            lineHeight: '1.5'\n          };\n          \n          const footerStyles = {\n            fontSize: '12px',\n            color: '#8b949e',\n            borderTop: '1px solid #f6f8fa',\n            paddingTop: '12px',\n            marginTop: '12px'\n          };\n          \n          return React.createElement('div', { style: cardStyles, ...props }, [\n            title && React.createElement('h3', { key: 'title', style: titleStyles }, title),\n            content && React.createElement('div', { key: 'content', style: contentStyles }, content),\n            footer && React.createElement('div', { key: 'footer', style: footerStyles }, footer)\n          ].filter(Boolean));\n        };\n      `,\n      props: { \n        title: 'Card Title', \n        content: 'This is the card content area with some descriptive text.',\n        footer: 'Card footer',\n        shadow: true,\n        padding: 'medium'\n      },\n      dependencies: []\n    },\n    \n    input: {\n      name: 'Input',\n      code: `\n        const Input = ({ \n          label, \n          placeholder = '', \n          type = 'text', \n          value = '', \n          onChange, \n          error,\n          disabled = false,\n          ...props \n        }) => {\n          const containerStyles = {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '6px',\n            fontFamily: 'inherit'\n          };\n          \n          const labelStyles = {\n            fontSize: '14px',\n            fontWeight: '500',\n            color: '#24292f'\n          };\n          \n          const inputStyles = {\n            padding: '8px 12px',\n            border: error ? '1px solid #dc3545' : '1px solid #d1d9e0',\n            borderRadius: '6px',\n            fontSize: '14px',\n            fontFamily: 'inherit',\n            backgroundColor: disabled ? '#f6f8fa' : 'white',\n            color: disabled ? '#8b949e' : '#24292f',\n            outline: 'none',\n            transition: 'border-color 0.2s ease',\n            '&:focus': {\n              borderColor: error ? '#dc3545' : '#0066cc',\n              boxShadow: error ? '0 0 0 3px rgba(220, 53, 69, 0.1)' : '0 0 0 3px rgba(0, 102, 204, 0.1)'\n            }\n          };\n          \n          const errorStyles = {\n            fontSize: '12px',\n            color: '#dc3545'\n          };\n          \n          const handleChange = (e) => {\n            if (onChange && !disabled) {\n              onChange(e);\n            }\n          };\n          \n          return React.createElement('div', { style: containerStyles }, [\n            label && React.createElement('label', { key: 'label', style: labelStyles }, label),\n            React.createElement('input', {\n              key: 'input',\n              type,\n              placeholder,\n              value,\n              onChange: handleChange,\n              disabled,\n              style: inputStyles,\n              ...props\n            }),\n            error && React.createElement('span', { key: 'error', style: errorStyles }, error)\n          ].filter(Boolean));\n        };\n      `,\n      props: {\n        label: 'Email Address',\n        placeholder: 'Enter your email',\n        type: 'email',\n        value: '',\n        error: '',\n        disabled: false\n      },\n      dependencies: []\n    },\n    \n    alert: {\n      name: 'Alert',\n      code: `\n        const Alert = ({ \n          children, \n          variant = 'info', \n          title,\n          dismissible = false,\n          onDismiss,\n          ...props \n        }) => {\n          const variants = {\n            info: {\n              backgroundColor: '#f0f8ff',\n              borderColor: '#0066cc',\n              color: '#0066cc'\n            },\n            success: {\n              backgroundColor: '#f0fff4',\n              borderColor: '#28a745',\n              color: '#28a745'\n            },\n            warning: {\n              backgroundColor: '#fffbf0',\n              borderColor: '#ffc107',\n              color: '#856404'\n            },\n            danger: {\n              backgroundColor: '#fff5f5',\n              borderColor: '#dc3545',\n              color: '#dc3545'\n            }\n          };\n          \n          const alertStyles = {\n            padding: '12px 16px',\n            borderRadius: '6px',\n            border: \\`1px solid \\${variants[variant].borderColor}\\`,\n            backgroundColor: variants[variant].backgroundColor,\n            color: variants[variant].color,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: '8px',\n            fontFamily: 'inherit'\n          };\n          \n          const contentStyles = {\n            flex: 1\n          };\n          \n          const titleStyles = {\n            fontWeight: '600',\n            marginBottom: '4px'\n          };\n          \n          const dismissButtonStyles = {\n            background: 'none',\n            border: 'none',\n            color: 'inherit',\n            cursor: 'pointer',\n            fontSize: '16px',\n            padding: '0',\n            marginLeft: '8px',\n            opacity: 0.7,\n            '&:hover': { opacity: 1 }\n          };\n          \n          return React.createElement('div', { style: alertStyles, ...props }, [\n            React.createElement('div', { key: 'content', style: contentStyles }, [\n              title && React.createElement('div', { key: 'title', style: titleStyles }, title),\n              React.createElement('div', { key: 'children' }, children)\n            ]),\n            dismissible && React.createElement('button', {\n              key: 'dismiss',\n              style: dismissButtonStyles,\n              onClick: onDismiss,\n              'aria-label': 'Dismiss'\n            }, '×')\n          ]);\n        };\n      `,\n      props: {\n        children: 'This is an informational alert message.',\n        variant: 'info',\n        title: 'Information',\n        dismissible: true\n      },\n      dependencies: []\n    }\n  };\n  \n  async generateBasicComponent(description: string): Promise<ComponentBundle> {\n    // Simple keyword matching for Phase 1\n    const keywords = description.toLowerCase();\n    \n    let template: ComponentTemplate;\n    \n    if (keywords.includes('button')) {\n      template = this.templates.button;\n    } else if (keywords.includes('card')) {\n      template = this.templates.card;\n    } else if (keywords.includes('input') || keywords.includes('form') || keywords.includes('field')) {\n      template = this.templates.input;\n    } else if (keywords.includes('alert') || keywords.includes('notification') || keywords.includes('message')) {\n      template = this.templates.alert;\n    } else {\n      // Default to button for unknown components\n      template = this.templates.button;\n    }\n    \n    // Customize props based on description\n    const customProps = this.customizeProps(template.props, description);\n    \n    return {\n      id: `component_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`,\n      name: template.name,\n      code: template.code,\n      props: customProps,\n      dependencies: template.dependencies,\n      generatedAt: Date.now()\n    };\n  }\n  \n  private customizeProps(baseProps: Record<string, any>, description: string): Record<string, any> {\n    const props = { ...baseProps };\n    const keywords = description.toLowerCase();\n    \n    // Customize button variants\n    if (keywords.includes('secondary')) {\n      props.variant = 'secondary';\n    } else if (keywords.includes('danger') || keywords.includes('delete') || keywords.includes('remove')) {\n      props.variant = 'danger';\n    }\n    \n    // Customize sizes\n    if (keywords.includes('small')) {\n      props.size = 'small';\n    } else if (keywords.includes('large') || keywords.includes('big')) {\n      props.size = 'large';\n    }\n    \n    // Customize alert variants\n    if (keywords.includes('success')) {\n      props.variant = 'success';\n      props.children = 'Operation completed successfully!';\n    } else if (keywords.includes('warning')) {\n      props.variant = 'warning';\n      props.children = 'Please review this information carefully.';\n    } else if (keywords.includes('error') || keywords.includes('danger')) {\n      props.variant = 'danger';\n      props.children = 'An error occurred. Please try again.';\n    }\n    \n    // Customize text content based on description\n    if (keywords.includes('login')) {\n      props.children = 'Login';\n    } else if (keywords.includes('submit')) {\n      props.children = 'Submit';\n    } else if (keywords.includes('save')) {\n      props.children = 'Save';\n    } else if (keywords.includes('cancel')) {\n      props.children = 'Cancel';\n      props.variant = 'secondary';\n    }\n    \n    return props;\n  }\n  \n  // Get available templates for help command\n  getAvailableTemplates(): string[] {\n    return Object.keys(this.templates);\n  }\n  \n  // Get template info for help\n  getTemplateInfo(templateName: string): ComponentTemplate | null {\n    return this.templates[templateName] || null;\n  }\n}\n\nexport const componentGenerator = new ComponentGenerator();\n\n// Helper function for terminal integration\nexport const generateBasicComponent = (description: string) => \n  componentGenerator.generateBasicComponent(description);"],"names":["ComponentGenerator","constructor","templates","button","name","code","props","children","variant","size","disabled","dependencies","card","title","content","footer","shadow","padding","input","label","placeholder","type","value","error","alert","dismissible","generateBasicComponent","description","keywords","toLowerCase","template","includes","this","customProps","customizeProps","id","Date","now","Math","random","toString","substr","generatedAt","baseProps","getAvailableTemplates","Object","keys","getTemplateInfo","templateName","componentGenerator"],"sourceRoot":""}