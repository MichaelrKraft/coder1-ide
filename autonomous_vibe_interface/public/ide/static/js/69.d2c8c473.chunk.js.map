{"version":3,"file":"static/js/69.d2c8c473.chunk.js","mappings":"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","sources":["../@xterm/xterm/webpack/universalModuleDefinition","../@xterm/xterm/src/browser/AccessibilityManager.ts","../@xterm/xterm/src/browser/Clipboard.ts","../@xterm/xterm/src/browser/ColorContrastCache.ts","../@xterm/xterm/src/browser/Lifecycle.ts","../@xterm/xterm/src/browser/Linkifier.ts","../@xterm/xterm/src/browser/LocalizableStrings.ts","../@xterm/xterm/src/browser/OscLinkProvider.ts","../@xterm/xterm/src/browser/RenderDebouncer.ts","../@xterm/xterm/src/browser/Terminal.ts","../@xterm/xterm/src/browser/TimeBasedDebouncer.ts","../@xterm/xterm/src/browser/Viewport.ts","../@xterm/xterm/src/browser/decorations/BufferDecorationRenderer.ts","../@xterm/xterm/src/browser/decorations/ColorZoneStore.ts","../@xterm/xterm/src/browser/decorations/OverviewRulerRenderer.ts","../@xterm/xterm/src/browser/input/CompositionHelper.ts","../@xterm/xterm/src/browser/input/Mouse.ts","../@xterm/xterm/src/browser/input/MoveToCell.ts","../@xterm/xterm/src/browser/renderer/dom/DomRenderer.ts","../@xterm/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","../@xterm/xterm/src/browser/renderer/dom/WidthCache.ts","../@xterm/xterm/src/browser/renderer/shared/Constants.ts","../@xterm/xterm/src/browser/renderer/shared/RendererUtils.ts","../@xterm/xterm/src/browser/renderer/shared/SelectionRenderModel.ts","../@xterm/xterm/src/browser/selection/SelectionModel.ts","../@xterm/xterm/src/browser/services/CharSizeService.ts","../@xterm/xterm/src/browser/services/CharacterJoinerService.ts","../@xterm/xterm/src/browser/services/CoreBrowserService.ts","../@xterm/xterm/src/browser/services/LinkProviderService.ts","../@xterm/xterm/src/browser/services/MouseService.ts","../@xterm/xterm/src/browser/services/RenderService.ts","../@xterm/xterm/src/browser/services/SelectionService.ts","../@xterm/xterm/src/browser/services/Services.ts","../@xterm/xterm/src/browser/services/ThemeService.ts","../@xterm/xterm/src/common/CircularList.ts","../@xterm/xterm/src/common/Clone.ts","../@xterm/xterm/src/common/Color.ts","../@xterm/xterm/src/common/CoreTerminal.ts","../@xterm/xterm/src/common/EventEmitter.ts","../@xterm/xterm/src/common/InputHandler.ts","../@xterm/xterm/src/common/Lifecycle.ts","../@xterm/xterm/src/common/MultiKeyMap.ts","../@xterm/xterm/src/common/Platform.ts","../@xterm/xterm/src/common/SortedList.ts","../@xterm/xterm/src/common/TaskQueue.ts","../@xterm/xterm/src/common/WindowsMode.ts","../@xterm/xterm/src/common/buffer/AttributeData.ts","../@xterm/xterm/src/common/buffer/Buffer.ts","../@xterm/xterm/src/common/buffer/BufferLine.ts","../@xterm/xterm/src/common/buffer/BufferRange.ts","../@xterm/xterm/src/common/buffer/BufferReflow.ts","../@xterm/xterm/src/common/buffer/BufferSet.ts","../@xterm/xterm/src/common/buffer/CellData.ts","../@xterm/xterm/src/common/buffer/Constants.ts","../@xterm/xterm/src/common/buffer/Marker.ts","../@xterm/xterm/src/common/data/Charsets.ts","../@xterm/xterm/src/common/data/EscapeSequences.ts","../@xterm/xterm/src/common/input/Keyboard.ts","../@xterm/xterm/src/common/input/TextDecoder.ts","../@xterm/xterm/src/common/input/UnicodeV6.ts","../@xterm/xterm/src/common/input/WriteBuffer.ts","../@xterm/xterm/src/common/input/XParseColor.ts","../@xterm/xterm/src/common/parser/Constants.ts","../@xterm/xterm/src/common/parser/DcsParser.ts","../@xterm/xterm/src/common/parser/EscapeSequenceParser.ts","../@xterm/xterm/src/common/parser/OscParser.ts","../@xterm/xterm/src/common/parser/Params.ts","../@xterm/xterm/src/common/public/AddonManager.ts","../@xterm/xterm/src/common/public/BufferApiView.ts","../@xterm/xterm/src/common/public/BufferLineApiView.ts","../@xterm/xterm/src/common/public/BufferNamespaceApi.ts","../@xterm/xterm/src/common/public/ParserApi.ts","../@xterm/xterm/src/common/public/UnicodeApi.ts","../@xterm/xterm/src/common/services/BufferService.ts","../@xterm/xterm/src/common/services/CharsetService.ts","../@xterm/xterm/src/common/services/CoreMouseService.ts","../@xterm/xterm/src/common/services/CoreService.ts","../@xterm/xterm/src/common/services/DecorationService.ts","../@xterm/xterm/src/common/services/InstantiationService.ts","../@xterm/xterm/src/common/services/LogService.ts","../@xterm/xterm/src/common/services/OptionsService.ts","../@xterm/xterm/src/common/services/OscLinkService.ts","../@xterm/xterm/src/common/services/ServiceRegistry.ts","../@xterm/xterm/src/common/services/Services.ts","../@xterm/xterm/src/common/services/UnicodeService.ts","../@xterm/xterm/webpack/bootstrap","../@xterm/xterm/src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(globalThis, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IInstantiationService } from 'common/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\n// Turn this on to unhide the accessibility tree and display it under\n// (instead of overlapping with) the terminal.\nconst DEBUG = false;\n\nexport class AccessibilityManager extends Disposable {\n  private _debugRootContainer: HTMLElement | undefined;\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _rowColumns: WeakMap<HTMLElement, number[]> = new WeakMap();\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = this._coreBrowserService.mainDocument.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n\n    if (DEBUG) {\n      this._accessibilityContainer.classList.add('debug');\n      this._rowContainer.classList.add('debug');\n\n      // Use a `<div class=\"xterm\">` container so that the css will still apply.\n      this._debugRootContainer = document.createElement('div');\n      this._debugRootContainer.classList.add('xterm');\n\n      this._debugRootContainer.appendChild(document.createTextNode('------start a11y------'));\n      this._debugRootContainer.appendChild(this._accessibilityContainer);\n      this._debugRootContainer.appendChild(document.createTextNode('------end a11y------'));\n\n      this._terminal.element.insertAdjacentElement('afterend', this._debugRootContainer);\n    } else {\n      this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n    }\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n    this.register(addDisposableDomListener(document, 'selectionchange', () => this._handleSelectionChange()));\n    this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      if (DEBUG) {\n        this._debugRootContainer!.remove();\n      } else {\n        this._accessibilityContainer.remove();\n      }\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const line = buffer.lines.get(buffer.ydisp + i);\n      const columns: number[] = [];\n      const lineData = line?.translateToString(true, undefined, undefined, columns) || '';\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n          this._rowColumns.set(element, [0, 1]);\n        } else {\n          element.textContent = lineData;\n          this._rowColumns.set(element, columns);\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleSelectionChange(): void {\n    if (this._rowElements.length === 0) {\n      return;\n    }\n\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n\n    if (selection.isCollapsed) {\n      // Only do something when the anchorNode is inside the row container. This\n      // behavior mirrors what we do with mouse --- if the mouse clicks\n      // somewhere outside of the terminal, we don't clear the selection.\n      if (this._rowContainer.contains(selection.anchorNode)) {\n        this._terminal.clearSelection();\n      }\n      return;\n    }\n\n    if (!selection.anchorNode || !selection.focusNode) {\n      console.error('anchorNode and/or focusNode are null');\n      return;\n    }\n\n    // Sort the two selection points in document order.\n    let begin = { node: selection.anchorNode, offset: selection.anchorOffset };\n    let end = { node: selection.focusNode, offset: selection.focusOffset };\n    if ((begin.node.compareDocumentPosition(end.node) & Node.DOCUMENT_POSITION_PRECEDING) || (begin.node === end.node && begin.offset > end.offset) ) {\n      [begin, end] = [end, begin];\n    }\n\n    // Clamp begin/end to the inside of the row container.\n    if (begin.node.compareDocumentPosition(this._rowElements[0]) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING)) {\n      begin = { node: this._rowElements[0].childNodes[0], offset: 0 };\n    }\n    if (!this._rowContainer.contains(begin.node)) {\n      // This happens when `begin` is below the last row.\n      return;\n    }\n    const lastRowElement = this._rowElements.slice(-1)[0];\n    if (end.node.compareDocumentPosition(lastRowElement) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_PRECEDING)) {\n      end = {\n        node: lastRowElement,\n        offset: lastRowElement.textContent?.length ?? 0\n      };\n    }\n    if (!this._rowContainer.contains(end.node)) {\n      // This happens when `end` is above the first row.\n      return;\n    }\n\n    const toRowColumn = ({ node, offset }: typeof begin): {row: number, column: number} | null => {\n      // `node` is either the row element or the Text node inside it.\n      const rowElement: any = node instanceof Text ? node.parentNode : node;\n      let row = parseInt(rowElement?.getAttribute('aria-posinset'), 10) - 1;\n      if (isNaN(row)) {\n        console.warn('row is invalid. Race condition?');\n        return null;\n      }\n\n      const columns = this._rowColumns.get(rowElement);\n      if (!columns) {\n        console.warn('columns is null. Race condition?');\n        return null;\n      }\n\n      let column = offset < columns.length ? columns[offset] : columns.slice(-1)[0] + 1;\n      if (column >= this._terminal.cols) {\n        ++row;\n        column = 0;\n      }\n      return {\n        row,\n        column\n      };\n    };\n\n    const beginRowColumn = toRowColumn(begin);\n    const endRowColumn = toRowColumn(end);\n\n    if (!beginRowColumn || !endRowColumn) {\n      return;\n    }\n\n    if (beginRowColumn.row > endRowColumn.row || (beginRowColumn.row === endRowColumn.row && beginRowColumn.column >= endRowColumn.column)) {\n      // This should not happen unless we have some bugs.\n      throw new Error('invalid range');\n    }\n\n    this._terminal.select(\n      beginRowColumn.column,\n      beginRowColumn.row,\n      (endRowColumn.row - beginRowColumn.row) * this._terminal.cols - beginRowColumn.column + endRowColumn.column\n    );\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { ILinkProviderService, IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier extends Disposable implements ILinkifier2 {\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILinkProviderService private readonly _linkProviderService: ILinkProviderService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n      // Clear out link providers as they could easily cause an embedder memory leak\n      this._activeProviderReplies?.clear();\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviderService.linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviderService.linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviderService.linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._lastMouseEvent) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n        // Sanity check, this shouldn't happen in practice as this listener would be disposed\n        if (!this._currentLink) {\n          return;\n        }\n        // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n        // cleared.\n        const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n        const end = this._bufferService.buffer.ydisp + 1 + e.end;\n        // Only clear the link if the viewport change happened on this line\n        if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n          this._clearCurrentLink(start, end);\n          if (this._lastMouseEvent) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }\n      }));\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink } from 'browser/Types';\nimport { ILinkProvider } from 'browser/services/Services';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier } from './Linkifier';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, CustomWheelEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, ILinkProviderService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { channels, color } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from '@xterm/xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { LinkProviderService } from 'browser/services/LinkProviderService';\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  public linkifier: ILinkifier2 | undefined;\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n  private _customWheelEventHandler: CustomWheelEventHandler | undefined;\n\n  // Browser services\n  private _decorationService: DecorationService;\n  private _linkProviderService: ILinkProviderService;\n\n  // Optional browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n    this._linkProviderService = this._instantiationService.createInstance(LinkProviderService);\n    this._instantiationService.setService(ILinkProviderService, this._linkProviderService);\n    this._linkProviderService.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const colorRgb = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(colorRgb)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = channels.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = channels.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: FocusEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    // If the terminal is already opened\n    if (this.element?.ownerDocument.defaultView && this._coreBrowserService) {\n      // Adjust the window if needed\n      if (this.element.ownerDocument.defaultView !== this._coreBrowserService.window) {\n        this._coreBrowserService.window = this.element.ownerDocument.defaultView;\n      }\n      return;\n    }\n\n    this._document = parent.ownerDocument;\n    if (this.options.documentOverride && this.options.documentOverride instanceof Document) {\n      this._document = this.optionsService.rawOptions.documentOverride as Document;\n    }\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = this._document.createDocumentFragment();\n    this._viewportElement = this._document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = this._document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = this._document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    this.register(addDisposableDomListener(this.screenElement, 'mousemove', (ev: MouseEvent) => this.updateCursorStyle(ev)));\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = this._document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = this._document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this.register(this._instantiationService.createInstance(CoreBrowserService,\n      this.textarea,\n      parent.ownerDocument.defaultView ?? window,\n      // Force unsafe null in node.js environment for tests\n      this._document ?? (typeof window !== 'undefined') ? window.document : null as any\n    ));\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: FocusEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = this._document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.linkifier = this.register(this._instantiationService.createInstance(Linkifier, this.screenElement));\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier!);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          if (self._customWheelEventHandler && self._customWheelEventHandler(ev as WheelEvent) === false) {\n            return false;\n          }\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (this._customWheelEventHandler && this._customWheelEventHandler(ev) === false) {\n        return false;\n      }\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent | MouseEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public attachCustomWheelEventHandler(customWheelEventHandler: CustomWheelEventHandler): void {\n    this._customWheelEventHandler = customWheelEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._linkProviderService.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowserService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowserService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent, ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n  private _selectionRenderModel: ISelectionRenderModel = createSelectionRenderModel();\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    const blinkAnimationUnderlineId = `blink_underline_${this._terminalClass}`;\n    const blinkAnimationBarId = `blink_bar_${this._terminalClass}`;\n    const blinkAnimationBlockId = `blink_block_${this._terminalClass}`;\n    styles +=\n      `@keyframes ${blinkAnimationUnderlineId} {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes ${blinkAnimationBarId} {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes ${blinkAnimationBlockId} {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` animation: ${blinkAnimationUnderlineId} 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` animation: ${blinkAnimationBarId} 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: ${blinkAnimationBlockId} 1s step-end infinite;` +\n      `}` +\n      // !important helps fix an issue where the cursor will not render on top of the selection,\n      // however it's very hard to fix this issue and retain the blink animation without the use of\n      // !important. So this edge case fails when cursor blink is on.\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS}:not(.${RowCss.CURSOR_BLINK_CLASS}) {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n    this.handleSelectionChanged(this._selectionRenderModel.selectionStart, this._selectionRenderModel.selectionEnd, this._selectionRenderModel.columnSelectMode);\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    this._selectionRenderModel.update(this._terminal, start, end, columnSelectMode);\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = this._selectionRenderModel.viewportStartRow;\n    const viewportEndRow = this._selectionRenderModel.viewportEndRow;\n    const viewportCappedStartRow = this._selectionRenderModel.viewportCappedStartRow;\n    const viewportCappedEndRow = this._selectionRenderModel.viewportCappedEndRow;\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    const left = colStart * this.dimensions.css.cell.width;\n    let width = this.dimensions.css.cell.width * (colEnd - colStart);\n    if (left + width > this.dimensions.css.canvas.width) {\n      width = this.dimensions.css.canvas.width - left;\n    }\n\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${left}px`;\n    element.style.width = `${width}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { channels, color } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { treatGlyphAsBackgroundColor } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = channels.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = channels.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || treatGlyphAsBackgroundColor(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      if (this._flat[cp] !== WidthCacheSettings.FLAT_UNSET) {\n        return this._flat[cp];\n      }\n      const width = this._measure(c, 0);\n      if (width > 0) {\n        this._flat[cp] = width;\n      }\n      return width;\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      if (width > 0) {\n        this._holey!.set(key, width);\n      }\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isNerdFontGlyph(codepoint: number): boolean {\n  return 0xE000 <= codepoint && codepoint <= 0xF8FF;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function isEmoji(codepoint: number): boolean {\n  return (\n    codepoint >= 0x1F600 && codepoint <= 0x1F64F || // Emoticons\n    codepoint >= 0x1F300 && codepoint <= 0x1F5FF || // Misc Symbols and Pictographs\n    codepoint >= 0x1F680 && codepoint <= 0x1F6FF || // Transport and Map\n    codepoint >= 0x2600  && codepoint <= 0x26FF  || // Misc symbols\n    codepoint >= 0x2700  && codepoint <= 0x27BF  || // Dingbats\n    codepoint >= 0xFE00  && codepoint <= 0xFE0F  || // Variation Selectors\n    codepoint >= 0x1F900 && codepoint <= 0x1F9FF || // Supplemental Symbols and Pictographs\n    codepoint >= 0x1F1E6 && codepoint <= 0x1F1FF\n  );\n}\n\nexport function allowRescaling(codepoint: number | undefined, width: number, glyphSizeX: number, deviceCellWidth: number): boolean {\n  return (\n    // Is single cell width\n    width === 1 &&\n    // Glyph exceeds cell bounds, add 50% to avoid hurting readability by rescaling glyphs that\n    // barely overlap\n    glyphSizeX > Math.ceil(deviceCellWidth * 1.5) &&\n    // Never rescale ascii\n    codepoint !== undefined && codepoint > 0xFF &&\n    // Never rescale emoji\n    !isEmoji(codepoint) &&\n    // Never rescale powerline or nerd fonts\n    !isPowerlineGlyph(codepoint) && !isNerdFontGlyph(codepoint)\n  );\n}\n\nexport function treatGlyphAsBackgroundColor(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n\nexport function computeNextVariantOffset(cellWidth: number, lineWidth: number, currentOffset: number = 0): number {\n  return (cellWidth - (Math.round(lineWidth) * 2 - currentOffset)) % (Math.round(lineWidth) * 2);\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from 'browser/Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from '@xterm/xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: ITerminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportY = terminal.buffers.active.ydisp;\n    const viewportStartRow = start[1] - viewportY;\n    const viewportEndRow = end[1] - viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    try {\n      this._measureStrategy = this.register(new TextMetricsMeasureStrategy(this._optionsService));\n    } catch {\n      this._measureStrategy = this.register(new DomMeasureStrategy(document, parentElement, this._optionsService));\n    }\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): Readonly<IMeasureResult>;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\nconst enum DomMeasureStrategyConstants {\n  REPEAT = 32\n}\n\nabstract class BaseMeasureStategy extends Disposable implements IMeasureStrategy {\n  protected _result: IMeasureResult = { width: 0, height: 0 };\n\n  protected _validateAndSet(width: number | undefined, height: number | undefined): void {\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (width !== undefined && width > 0 && height !== undefined && height > 0) {\n      this._result.width = width;\n      this._result.height = height;\n    }\n  }\n\n  public abstract measure(): Readonly<IMeasureResult>;\n}\n\nclass DomMeasureStrategy extends BaseMeasureStategy {\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(DomMeasureStrategyConstants.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    this._validateAndSet(Number(this._measureElement.offsetWidth) / DomMeasureStrategyConstants.REPEAT, Number(this._measureElement.offsetHeight));\n\n    return this._result;\n  }\n}\n\nclass TextMetricsMeasureStrategy extends BaseMeasureStategy {\n  private _canvas: OffscreenCanvas;\n  private _ctx: OffscreenCanvasRenderingContext2D;\n\n  constructor(\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    // This will throw if any required API is not supported\n    this._canvas = new OffscreenCanvas(100, 100);\n    this._ctx = this._canvas.getContext('2d')!;\n    const a = this._ctx.measureText('W');\n    if (!('width' in a && 'fontBoundingBoxAscent' in a && 'fontBoundingBoxDescent' in a)) {\n      throw new Error('Required font metrics not supported');\n    }\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._ctx.font = `${this._optionsService.rawOptions.fontSize}px ${this._optionsService.rawOptions.fontFamily}`;\n    const metrics = this._ctx.measureText('W');\n    this._validateAndSet(metrics.width, metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent);\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService } from './Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class CoreBrowserService extends Disposable implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n  private _screenDprMonitor = new ScreenDprMonitor(this._window);\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n  private readonly _onWindowChange = this.register(new EventEmitter<Window & typeof globalThis>());\n  public readonly onWindowChange = this._onWindowChange.event;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _window: Window & typeof globalThis,\n    public readonly mainDocument: Document\n  ) {\n    super();\n\n    // Monitor device pixel ratio\n    this.register(this.onWindowChange(w => this._screenDprMonitor.setWindow(w)));\n    this.register(forwardEvent(this._screenDprMonitor.onDprChange, this._onDprChange));\n\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get window(): Window & typeof globalThis {\n    return this._window;\n  }\n\n  public set window(value: Window & typeof globalThis) {\n    if (this._window !== value) {\n      this._window = value;\n      this._onWindowChange.fire(this._window);\n    }\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nclass ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n  private _windowResizeListener = this.register(new MutableDisposable());\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n\n  constructor(private _parentWindow: Window) {\n    super();\n\n    // Initialize listener and dpr value\n    this._outerListener = () => this._setDprAndFireIfDiffers();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._updateDpr();\n\n    // Monitor active window resize\n    this._setWindowResizeListener();\n\n    // Setup additional disposables\n    this.register(toDisposable(() => this.clearListener()));\n  }\n\n\n  public setWindow(parentWindow: Window): void {\n    this._parentWindow = parentWindow;\n    this._setWindowResizeListener();\n    this._setDprAndFireIfDiffers();\n  }\n\n  private _setWindowResizeListener(): void {\n    this._windowResizeListener.value = addDisposableDomListener(this._parentWindow, 'resize', () => this._setDprAndFireIfDiffers());\n  }\n\n  private _setDprAndFireIfDiffers(): void {\n    if (this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio) {\n      this._onDprChange.fire(this._parentWindow.devicePixelRatio);\n    }\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._outerListener = undefined;\n  }\n}\n","import { ILinkProvider, ILinkProviderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport class LinkProviderService extends Disposable implements ILinkProviderService {\n  declare public serviceBrand: undefined;\n\n  public readonly linkProviders: ILinkProvider[] = [];\n\n  constructor() {\n    super();\n    this.register(toDisposable(() => this.linkProviders.length = 0));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this.linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this.linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this.linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _pausedResizeTask = new DebouncedIdleTask();\n  private _observerDisposable = this.register(new MutableDisposable());\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange = this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end), coreBrowserService);\n    this.register(this._renderDebouncer);\n\n    this.register(coreBrowserService.onDprChange(() => this.handleDevicePixelRatioChange()));\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio',\n      'rescaleOverlappingGlyphs'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    this._registerIntersectionObserver(coreBrowserService.window, screenElement);\n    this.register(coreBrowserService.onWindowChange((w) => this._registerIntersectionObserver(w, screenElement)));\n  }\n\n  private _registerIntersectionObserver(w: Window & typeof globalThis, screenElement: HTMLElement): void {\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in w) {\n      const observer = new w.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this._observerDisposable.value = toDisposable(() => observer.disconnect());\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value?.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ILink, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n\n  readonly onDprChange: IEvent<number>;\n  readonly onWindowChange: IEvent<Window & typeof globalThis>;\n\n  /**\n   * Gets or sets the parent window that the terminal is rendered into. DOM and rendering APIs (e.g.\n   * requestAnimationFrame) should be invoked in the context of this window. This should be set when\n   * the window hosting the xterm.js instance changes.\n   */\n  window: Window & typeof globalThis;\n  /**\n   * The document of the primary window to be used to create elements when working with multiple\n   * windows. This is defined by the documentOverride setting.\n   */\n  readonly mainDocument: Document;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n\n\nexport const ILinkProviderService = createDecorator<ILinkProviderService>('LinkProviderService');\nexport interface ILinkProviderService extends IDisposable {\n  serviceBrand: undefined;\n  readonly linkProviders: ReadonlyArray<ILinkProvider>;\n  registerLinkProvider(linkProvider: ILinkProvider): IDisposable;\n}\nexport interface ILinkProvider {\n  provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return channels.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  // Attempt to set get the shared canvas context\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  try {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n  catch {\n    // noop\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return channels.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return channels.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return channels.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function blend(bg: number, fg: number): number {\n    $a = (fg & 0xFF) / 0xFF;\n    if ($a === 1) {\n      return fg;\n    }\n    const fgR = (fg >> 24) & 0xFF;\n    const fgG = (fg >> 16) & 0xFF;\n    const fgB = (fg >> 8) & 0xFF;\n    const bgR = (bg >> 24) & 0xFF;\n    const bgG = (bg >> 16) & 0xFF;\n    const bgB = (bg >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    return channels.toRgba($r, $g, $b);\n  }\n\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public input(data: string, wasUserInput: boolean = true): void {\n    this.coreService.triggerDataEvent(data, wasUserInput);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via @xterm/addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x - 1, 0, 1, curAttr);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodepoint(oldCol++, 0, 1, curAttr);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodepoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x++, code, chWidth, curAttr);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x, 0, 1, curAttr);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined' && 'title' in (process as any)) ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n  public getUnderlineVariantOffset(): number {\n    return this.extended.underlineVariantOffset;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  public get underlineVariantOffset(): number {\n    const val = (this._ext & ExtFlags.VARIANT_OFFSET) >> 29;\n    if (val < 0) {\n      return val ^ 0xFFFFFFF8;\n    }\n    return val;\n  }\n  public set underlineVariantOffset(value: number) {\n    this._ext &= ~ExtFlags.VARIANT_OFFSET;\n    this._ext |= (value << 29) & ExtFlags.VARIANT_OFFSET;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodepoint(index: number, codePoint: number, width: number, attrs: IAttributeData): void {\n    if (attrs.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = attrs.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = attrs.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = attrs.bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodepoint(this.length - 1, 0, 1, fillCellData);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodepoint(pos, 0, 1, fillCellData);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodepoint(end, 0, 1, fillCellData);\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodepoint(end, 0, 1, fillCellData);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  /**\n   * Translates the buffer line to a string.\n   *\n   * @param trimRight Whether to trim any empty cells on the right.\n   * @param startCol The column to start the string (0-based inclusive).\n   * @param endCol The column to end the string (0-based exclusive).\n   * @param outColumns if specified, this array will be filled with column numbers such that\n   * `returnedString[i]` is displayed at `outColumns[i]` column. `outColumns[returnedString.length]`\n   * is where the character following `returnedString` will be displayed.\n   *\n   * When a single cell is translated to multiple UTF-16 code units (e.g. surrogate pair) in the\n   * returned string, the corresponding entries in `outColumns` will have the same column number.\n   */\n  public translateToString(trimRight?: boolean, startCol?: number, endCol?: number, outColumns?: number[]): string {\n    startCol = startCol ?? 0;\n    endCol = endCol ?? this.length;\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    if (outColumns) {\n      outColumns.length = 0;\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      const chars = (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      result += chars;\n      if (outColumns) {\n        for (let i = 0; i < chars.length; ++i) {\n          outColumns.push(startCol);\n        }\n      }\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by at least 1\n    }\n    if (outColumns) {\n      outColumns.push(startCol);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from '@xterm/xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..29\n   */\n  UNDERLINE_STYLE = 0x1C000000,\n\n  /**\n   * bit 30..32\n   *\n   * An optional variant for the glyph, this can be used for example to offset underlines by a\n   * number of pixels to create a perfect pattern.\n   */\n  VARIANT_OFFSET = 0xE0000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      result.key = ev.ctrlKey ? '\\b' : C0.DEL; // ^H or ^?\n      if (ev.altKey) {\n        result.key = C0.ESC + result.key;\n      }\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from '@xterm/xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from '@xterm/xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from '@xterm/xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from '@xterm/xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from '@xterm/xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from '@xterm/xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from '@xterm/xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rescaleOverlappingGlyphs: false,\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n\n    // Clear out options that could link outside xterm.js as they could easily cause an embedder\n    // memory leak\n    this.register(toDisposable(() => {\n      this.rawOptions.linkHandler = null;\n      this.rawOptions.documentOverride = null;\n    }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from '@xterm/xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rescaleOverlappingGlyphs?: boolean;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from '@xterm/xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public input(data: string, wasUserInput: boolean = true): void {\n    this._core.input(data, wasUserInput);\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public attachCustomWheelEventHandler(customWheelEventHandler: (event: WheelEvent) => boolean): void {\n    this._core.attachCustomWheelEventHandler(customWheelEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["t","globalThis","n","i","o","a","h","c","l","d","AccessibilityManager","Disposable","constructor","e","s","super","_terminal","_coreBrowserService","_renderService","_rowColumns","WeakMap","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","mainDocument","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","element","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","_handleChar","onLineFeed","onA11yTab","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","addDisposableDomListener","document","_handleSelectionChange","onDprChange","toDisposable","remove","shift","textContent","tooMuchOutput","test","push","refresh","buffer","lines","toString","r","get","ydisp","translateToString","innerText","set","_announceCharacters","target","getAttribute","relatedTarget","pop","removeChild","removeEventListener","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","getSelection","isCollapsed","contains","anchorNode","clearSelection","focusNode","console","error","node","offset","anchorOffset","focusOffset","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_FOLLOWING","childNodes","slice","_ref","Text","parentNode","parseInt","isNaN","warn","cols","row","column","select","children","tabIndex","_refreshRowDimensions","dimensions","css","cell","height","style","width","canvas","IInstantiationService","ICoreBrowserService","IRenderService","replace","decPrivateModes","bracketedPasteMode","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","value","getBoundingClientRect","clientX","left","clientY","top","zIndex","prepareTextForTerminal","bracketTextForPaste","copyHandler","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","paste","moveTextAreaUnderMouseCursor","rightClickHandler","rightClickSelect","ColorContrastCache","_color","TwoKeyMap","_css","setCss","getCss","setColor","getColor","clear","dispose","Linkifier","currentLink","_currentLink","_element","_mouseService","_bufferService","_linkProviderService","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","_activeProviderReplies","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","forEach","Map","linkProviders","entries","_checkLinkProviderResult","provideLinks","map","size","_removeIntersectingLinks","Set","range","has","splice","find","_handleNewLink","_mouseDownLink","activate","text","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","_createLinkUnderlineEvent","fire","leave","getCoords","x1","y1","x2","y2","fg","IMouseService","IBufferService","ILinkProviderService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","linkHandler","CellData","getTrimmedLength","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","allowNonHttpProtocols","URL","includes","protocol","confirm","window","open","opener","location","href","IOptionsService","IOscLinkService","RenderDebouncer","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_","u","f","v","p","g","m","S","C","b","w","E","k","L","D","R","A","B","T","M","O","P","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","arguments","undefined","browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","_decorationService","_instantiationService","createInstance","DecorationService","setService","IDecorationService","LinkProviderService","registerLinkProvider","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","_themeService","index","type","color","toColorRGB","colors","ansi","coreService","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","channels","toColor","restoreColor","buffers","active","textarea","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","ybase","getWidth","lineHeight","_initGlobal","_bindKeys","hasSelection","_selectionService","optionsService","isFirefox","button","screenElement","options","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","isConnected","_logService","debug","ownerDocument","defaultView","_document","documentOverride","Document","dir","createDocumentFragment","_viewportElement","_viewportScrollArea","updateCursorStyle","_helperContainer","isChromeOS","CoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","MouseService","linkifier","hasRenderer","setRenderer","_createRenderer","viewport","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","getMouseReportCoords","overrideType","buttons","_customWheelEventHandler","getLinesScrolled","deltaY","triggerMouseEvent","col","action","ctrl","ctrlKey","alt","altKey","shiftKey","mouseup","wheel","mousedrag","mousemove","cancel","onProtocolChange","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","applicationCursorKeys","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","attachCustomKeyEventHandler","attachCustomWheelEventHandler","registerCharacterJoiner","deregisterCharacterJoiner","deregister","markers","registerMarker","addMarker","registerDecoration","setSelection","getSelectionPosition","selectionStart","selectionEnd","selectAll","selectLines","isMac","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","data","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","position","source","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","toFixed","GET_CELL_SIZE_PIXELS","cancelEvents","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","Date","now","setTimeout","_scrollArea","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","device","dpr","offsetHeight","round","scrollTop","offsetParent","_smoothScroll","_isDisposed","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","isWrapped","bufferElements","cursorElement","DOM_DELTA_PIXEL","floor","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","line","display","onRenderEmitter","onDispose","delete","anchor","right","ColorZoneStore","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","_width","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","ceil","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","substring","DEL","fontFamily","fontSize","ICoreService","getComputedStyle","getPropertyValue","getCoordsRelativeToElement","translateBufferLineToString","moveToCellSequence","_linkifier2","_terminalClass","_selectionRenderModel","createSelectionRenderModel","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","char","letterSpacing","overflow","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","INVERTED_DEFAULT_COLOR","opaque","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","update","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","_createSelectionElement","cursorBlink","cursorStyle","cursorInactiveStyle","createRow","_setCellUnderline","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","getJoinedCharacters","getNoBgTrimmedLength","I","JoinedCellData","H","_isCellInSelection","F","W","U","forEachDecorationAtCell","N","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","bg","selectionForeground","ext","isInvisible","isCursorHidden","isFocused","isDim","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","$","getFgColor","j","getFgColorMode","z","getBgColor","K","getBgColorMode","q","isInverse","V","G","X","J","backgroundColorRGB","rgba","foregroundColorRGB","_addStyle","_applyMinimumContrast","className","minimumContrastRatio","treatGlyphAsBackgroundColor","getCode","_getContrastCache","ensureContrastRatio","halfContrastCache","contrastCache","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","fontStyle","_holey","fill","_measure","repeat","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","throwIfFalsy","isPowerlineGlyph","isRestrictedPowerlineGlyph","isEmoji","allowRescaling","computeNextVariantOffset","startCol","endCol","isCellSelected","viewportY","SelectionModel","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","onMultipleOptionChange","_result","_validateAndSet","_parentElement","_measureElement","Number","OffscreenCanvas","measureText","font","fontBoundingBoxAscent","fontBoundingBoxDescent","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","id","handler","getFg","getBg","_getJoinedRanges","_mergeRanges","_stringRangesToCellRanges","getString","_window","_isFocused","_cachedIsFocused","_screenDprMonitor","_onDprChange","_onWindowChange","onWindowChange","setWindow","devicePixelRatio","hasFocus","queueMicrotask","_parentWindow","_windowResizeListener","_outerListener","_setDprAndFireIfDiffers","_currentDevicePixelRatio","_updateDpr","_setWindowResizeListener","clearListener","_resolutionMediaMatchList","removeListener","matchMedia","addListener","indexOf","_renderer","_pausedResizeTask","DebouncedIdleTask","_observerDisposable","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","_fullRefresh","_registerIntersectionObserver","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","flush","_fireOnCanvasResize","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","_selectToWordAt","altClickMovesCursor","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","_getWordAt","charAt","_isCharWordSeparator","trim","getCodePoint","wordSeparator","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_ANSI_COLORS","freeze","toCss","toRgba","_colors","_contrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","_restoreColor","_restoreColors","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","_getCyclicIndex","recycle","isFull","trimStart","shiftElements","CircularList","clone","isArray","toChannels","willReadFrequently","globalCompositeOperation","createLinearGradient","match","parseFloat","getImageData","pow","relativeLuminance","relativeLuminance2","rgb","reduceLuminance","increaseLuminance","toPaddedHex","contrastRatio","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","parse","write","writeSync","LogLevelEnum","WARN","input","MINIMUM_COLS","MINIMUM_ROWS","scroll","scrollPages","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","call","clearListeners","runAndSubscribe","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","getAttrData","_curAttrData","EscapeSequenceParser","_coreMouseService","_unicodeService","_parser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","setCsiHandlerFallback","identifier","identToString","params","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","Promise","race","catch","_getCurrentLinkId","DEBUG","prototype","split","clearRange","decode","subarray","charset","wraparound","modes","insertMode","markDirty","setCellFromCodepoint","precedingJoinState","charProperties","extractWidth","extractShouldJoin","stringFromCodePoint","addLineToLink","_eraseAttrData","BufferLine","copyCellsFrom","addCodepointToCell","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","convertEol","reverseWraparound","_restrictCursor","nextStop","_setCursor","_moveCursor","tabs","prevStop","_eraseInBufferLine","replaceCells","_resetBufferLine","clearMarkers","deleteCells","codePointAt","copyWithin","_is","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","fromColorRGB","_extractColor","hasSubParams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","exec","parseColor","_createHyperlink","_finishHyperlink","findIndex","startsWith","registerLink","_setOrReportSpecialColor","markAllDirty","isProtected","block","bar","_disposables","unregister","_value","_data","FourKeyMap","isNode","process","navigator","userAgent","platform","isSafari","getSafariVersion","isIpad","isIphone","SortedList","_getKey","insert","_search","getKeyIterator","forEachByKey","values","_tasks","_i","enqueue","_start","_idleCallback","_cancelCallback","_requestCallback","_process","timeRemaining","_createDeadline","PriorityTaskQueue","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","getUnderlineVariantOffset","underlineVariantOffset","_urlId","_ext","ExtendedAttrs","MAX_BUFFER_SIZE","Buffer","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","scrollback","fillViewportRows","_isReflowEnabled","_reflow","_batchedMemoryCleanup","cleanupMemory","_reflowLarger","_reflowSmaller","reflowLargerGetLinesToRemove","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","reflowSmallerGetNewLineLengths","newLines","getWrappedLineTrimmedLength","setCell","tabStopWidth","Marker","_removeMarker","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","byteLength","keys","copyFrom","reduce","_onBufferActivate","_normal","_alt","inactiveBuffer","BufferSet","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","Q","Y","Z","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","toUpperCase","toLowerCase","utf32ToString","_interim","interim","Uint8Array","UnicodeV6","version","wcwidth","createPropertyValue","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","_innerWrite","resolve","then","PAYLOAD_LIMIT","DcsParser","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","clearHandler","setHandlerFallback","unhook","hook","put","Params","addParam","_handler","_params","_hitLimit","table","setDefault","addMany","TransitionTable","VT500_TRANSITION_TABLE","apply","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","_state","_put","fromArray","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","getSubParamsAll","AddonManager","_addons","instance","loadAddon","_wrappedAddonDispose","BufferApiView","_buffer","init","cursorY","cursorX","baseY","getLine","BufferLineApiView","_line","getCell","_core","_onBufferChange","onBufferChange","_alternate","alternate","BufferNamespaceApi","ParserApi","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","UnicodeApi","versions","activeVersion","isUserScrolling","_cachedBlankLine","glevel","_charsets","NONE","events","restrict","X10","VT200","DRAG","ANY","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","addProtocol","addEncoding","_equalEvents","triggerBinaryEvent","down","up","drag","move","_onUserInput","_onRequestScrollToBottom","disableStdin","_decorations","_onDecorationRegistered","_onDecorationRemoved","getDecorationsAtCell","_cachedBg","_cachedFg","foregroundColor","_entries","_len","_key","ServiceCollection","_services","getService","getServiceDependencies","sort","name","_len2","_key2","trace","TRACE","info","INFO","ERROR","off","OFF","_logLevel","_updateLogLevel","_evalLazyOptionalParams","_log","logger","_len3","_key3","log","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","setTraceLogger","traceCall","_len8","_key8","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","rescaleOverlappingGlyphs","_onOptionChange","_sanitizeAndValidateOption","_setupOptions","setter","defineProperty","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","_getEntryIdKey","every","serviceRegistry","extractCharKind","_providers","_onChange","onChange","_activeProvider","getStringCellWidth","exports","_addonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","unicode","applicationCursorKeysMode","applicationKeypadMode","mouseTrackingMode","originMode","reverseWraparoundMode","sendFocusMode","wraparoundMode","_verifyIntegers","_verifyPositiveIntegers","writeln","strings","_len9","_key9","_len0","_key0","module"],"sourceRoot":""}