"use strict";(self.webpackChunkcoder1_ide_source=self.webpackChunkcoder1_ide_source||[]).push([[179],{4179:(n,e,t)=>{t.r(e),t.d(e,{ComponentGenerator:()=>o,componentGenerator:()=>r,generateBasicComponent:()=>a});class o{constructor(){this.componentMap={"hero section":"gradient-card",hero:"gradient-card","cta button":"glowing-button","call to action":"glowing-button","submit button":"gradient-button","glass button":"glass-button","glowing button":"glowing-button","gradient button":"gradient-button","outline button":"outline-button","floating button":"floating-button",navigation:"glass-card",navbar:"glass-card","pricing card":"gradient-card","feature card":"hover-card"},this.templates={"glowing-button":{name:"GlowingButton",code:"\n        const GlowingButton = ({ text = 'Click Me', onClick = () => alert('Button clicked!') }) => {\n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg transition-all duration-300 shadow-lg shadow-purple-500/50 hover:shadow-xl hover:shadow-purple-500/60',\n            style: {\n              animation: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite'\n            }\n          }, text);\n        };\n      ",props:{text:"Click Me"},dependencies:[]},"gradient-button":{name:"GradientButton",code:"\n        const GradientButton = ({ text = 'Gradient Magic', onClick = () => alert('Gradient button clicked!') }) => {\n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white font-medium rounded-lg transition-all duration-300 transform hover:scale-105'\n          }, text);\n        };\n      ",props:{text:"Gradient Magic"},dependencies:[]},"outline-button":{name:"OutlineButton",code:"\n        const OutlineButton = ({ text = 'Outline Style', onClick = () => alert('Outline button clicked!') }) => {\n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 border-2 border-purple-500 text-purple-600 hover:bg-purple-500 hover:text-white font-medium rounded-lg transition-all duration-300 shadow-lg'\n          }, text);\n        };\n      ",props:{text:"Outline Style"},dependencies:[]},"glass-button":{name:"GlassButton",code:"\n        const GlassButton = ({ text = 'Glass Effect', onClick = () => alert('Glass button clicked!') }) => {\n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 backdrop-blur-md border border-white/30 text-white font-medium rounded-lg transition-all duration-300 hover:bg-white/20 shadow-lg',\n            style: { \n              backgroundColor: 'rgba(139, 92, 246, 0.1)',\n              backdropFilter: 'blur(10px)'\n            }\n          }, text);\n        };\n      ",props:{text:"Glass Effect"},dependencies:[]},"floating-button":{name:"FloatingButton",code:"\n        const FloatingButton = ({ text = 'Floating', onClick = () => alert('Floating button clicked!') }) => {\n          const styles = {\n            animation: 'float 3s ease-in-out infinite'\n          };\n          \n          // Add keyframes dynamically\n          if (!document.getElementById('float-keyframes')) {\n            const style = document.createElement('style');\n            style.id = 'float-keyframes';\n            style.textContent = `\n              @keyframes float {\n                0%, 100% { transform: translateY(0px); }\n                50% { transform: translateY(-10px); }\n              }\n            `;\n            document.head.appendChild(style);\n          }\n          \n          return React.createElement('button', {\n            onClick: onClick,\n            className: 'px-6 py-3 bg-purple-600 text-white font-medium rounded-full shadow-lg transition-all duration-300',\n            style: styles\n          }, text);\n        };\n      ",props:{text:"Floating"},dependencies:[]},"gradient-card":{name:"GradientCard",code:"\n        const GradientCard = ({ \n          title = 'Welcome to Our Platform', \n          description = 'Build amazing applications with our powerful components and intuitive interface.',\n          buttonText = 'Get Started',\n          onClick = () => alert('Getting started!')\n        }) => {\n          return React.createElement('div', {\n            className: 'p-8 bg-gradient-to-br from-purple-100 to-pink-100 rounded-2xl border border-purple-200 shadow-xl'\n          }, [\n            React.createElement('h2', {\n              key: 'title',\n              className: 'text-3xl font-bold text-gray-900 mb-4'\n            }, title),\n            React.createElement('p', {\n              key: 'description',\n              className: 'text-gray-700 mb-6 text-lg leading-relaxed'\n            }, description),\n            React.createElement('button', {\n              key: 'button',\n              onClick: onClick,\n              className: 'px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all duration-300 transform hover:scale-105 shadow-lg'\n            }, buttonText)\n          ]);\n        };\n      ",props:{title:"Welcome to Our Platform",description:"Build amazing applications with our powerful components and intuitive interface.",buttonText:"Get Started"},dependencies:[]},"glass-card":{name:"GlassCard",code:"\n        const GlassCard = ({ \n          title = 'Glass Card', \n          description = 'Beautiful glassmorphism effect with backdrop blur'\n        }) => {\n          return React.createElement('div', {\n            className: 'p-6 backdrop-blur-md rounded-xl border border-white/30 shadow-2xl',\n            style: {\n              backgroundColor: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(10px)'\n            }\n          }, [\n            React.createElement('h3', {\n              key: 'title',\n              className: 'text-2xl font-bold text-gray-900 mb-3'\n            }, title),\n            React.createElement('p', {\n              key: 'description',\n              className: 'text-gray-700'\n            }, description)\n          ]);\n        };\n      ",props:{title:"Glass Card",description:"Beautiful glassmorphism effect with backdrop blur"},dependencies:[]},"hover-card":{name:"HoverCard",code:"\n        const HoverCard = ({ \n          title = 'Interactive Card', \n          description = 'Hover for elevation effect'\n        }) => {\n          return React.createElement('div', {\n            className: 'p-6 bg-white rounded-xl border border-gray-200 transition-all duration-300 hover:shadow-2xl hover:-translate-y-1'\n          }, [\n            React.createElement('h3', {\n              key: 'title',\n              className: 'text-2xl font-bold text-gray-900 mb-3'\n            }, title),\n            React.createElement('p', {\n              key: 'description',\n              className: 'text-gray-600'\n            }, description)\n          ]);\n        };\n      ",props:{title:"Interactive Card",description:"Hover for elevation effect"},dependencies:[]},button:{name:"Button",code:"\n        const Button = ({ children, onClick, variant = 'primary', size = 'medium', disabled = false, ...props }) => {\n          const baseStyles = {\n            padding: size === 'small' ? '6px 12px' : size === 'large' ? '12px 24px' : '8px 16px',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: disabled ? 'not-allowed' : 'pointer',\n            fontSize: size === 'small' ? '12px' : size === 'large' ? '16px' : '14px',\n            fontWeight: '500',\n            fontFamily: 'inherit',\n            transition: 'all 0.2s ease',\n            opacity: disabled ? 0.6 : 1,\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '6px'\n          };\n          \n          const variants = {\n            primary: { \n              backgroundColor: '#0066cc', \n              color: 'white'\n            },\n            secondary: { \n              backgroundColor: '#f6f8fa', \n              color: '#24292f',\n              border: '1px solid #d1d9e0'\n            },\n            danger: { \n              backgroundColor: '#dc3545', \n              color: 'white'\n            }\n          };\n          \n          const handleClick = (e) => {\n            if (!disabled && onClick) {\n              onClick(e);\n            }\n          };\n          \n          const variantStyles = variants[variant] || variants.primary;\n          const finalStyles = { ...baseStyles, ...variantStyles };\n          \n          return React.createElement('button', {\n            style: finalStyles,\n            onClick: handleClick,\n            disabled,\n            ...props\n          }, children);\n        };\n      ",props:{children:"Click me",variant:"primary",size:"medium",disabled:!1},dependencies:[]},card:{name:"Card",code:"\n        const Card = ({ title, content, footer, shadow = true, padding = 'medium', ...props }) => {\n          const cardStyles = {\n            border: '1px solid #e1e5e9',\n            borderRadius: '8px',\n            padding: padding === 'small' ? '12px' : padding === 'large' ? '24px' : '16px',\n            backgroundColor: 'white',\n            boxShadow: shadow ? '0 1px 3px rgba(0,0,0,0.1)' : 'none',\n            fontFamily: 'inherit'\n          };\n          \n          const titleStyles = {\n            margin: '0 0 12px 0',\n            fontSize: '18px',\n            fontWeight: '600',\n            color: '#24292f'\n          };\n          \n          const contentStyles = {\n            marginBottom: footer ? '12px' : '0',\n            color: '#656d76',\n            lineHeight: '1.5'\n          };\n          \n          const footerStyles = {\n            fontSize: '12px',\n            color: '#8b949e',\n            borderTop: '1px solid #f6f8fa',\n            paddingTop: '12px',\n            marginTop: '12px'\n          };\n          \n          return React.createElement('div', { style: cardStyles, ...props }, [\n            title && React.createElement('h3', { key: 'title', style: titleStyles }, title),\n            content && React.createElement('div', { key: 'content', style: contentStyles }, content),\n            footer && React.createElement('div', { key: 'footer', style: footerStyles }, footer)\n          ].filter(Boolean));\n        };\n      ",props:{title:"Card Title",content:"This is the card content area with some descriptive text.",footer:"Card footer",shadow:!0,padding:"medium"},dependencies:[]},input:{name:"Input",code:"\n        const Input = ({ \n          label, \n          placeholder = '', \n          type = 'text', \n          value = '', \n          onChange, \n          error,\n          disabled = false,\n          ...props \n        }) => {\n          const containerStyles = {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '6px',\n            fontFamily: 'inherit'\n          };\n          \n          const labelStyles = {\n            fontSize: '14px',\n            fontWeight: '500',\n            color: '#24292f'\n          };\n          \n          const inputStyles = {\n            padding: '8px 12px',\n            border: error ? '1px solid #dc3545' : '1px solid #d1d9e0',\n            borderRadius: '6px',\n            fontSize: '14px',\n            fontFamily: 'inherit',\n            backgroundColor: disabled ? '#f6f8fa' : 'white',\n            color: disabled ? '#8b949e' : '#24292f',\n            outline: 'none',\n            transition: 'border-color 0.2s ease',\n            '&:focus': {\n              borderColor: error ? '#dc3545' : '#0066cc',\n              boxShadow: error ? '0 0 0 3px rgba(220, 53, 69, 0.1)' : '0 0 0 3px rgba(0, 102, 204, 0.1)'\n            }\n          };\n          \n          const errorStyles = {\n            fontSize: '12px',\n            color: '#dc3545'\n          };\n          \n          const handleChange = (e) => {\n            if (onChange && !disabled) {\n              onChange(e);\n            }\n          };\n          \n          return React.createElement('div', { style: containerStyles }, [\n            label && React.createElement('label', { key: 'label', style: labelStyles }, label),\n            React.createElement('input', {\n              key: 'input',\n              type,\n              placeholder,\n              value,\n              onChange: handleChange,\n              disabled,\n              style: inputStyles,\n              ...props\n            }),\n            error && React.createElement('span', { key: 'error', style: errorStyles }, error)\n          ].filter(Boolean));\n        };\n      ",props:{label:"Email Address",placeholder:"Enter your email",type:"email",value:"",error:"",disabled:!1},dependencies:[]},alert:{name:"Alert",code:"\n        const Alert = ({ \n          children, \n          variant = 'info', \n          title,\n          dismissible = false,\n          onDismiss,\n          ...props \n        }) => {\n          const variants = {\n            info: {\n              backgroundColor: '#f0f8ff',\n              borderColor: '#0066cc',\n              color: '#0066cc'\n            },\n            success: {\n              backgroundColor: '#f0fff4',\n              borderColor: '#28a745',\n              color: '#28a745'\n            },\n            warning: {\n              backgroundColor: '#fffbf0',\n              borderColor: '#ffc107',\n              color: '#856404'\n            },\n            danger: {\n              backgroundColor: '#fff5f5',\n              borderColor: '#dc3545',\n              color: '#dc3545'\n            }\n          };\n          \n          const alertStyles = {\n            padding: '12px 16px',\n            borderRadius: '6px',\n            border: `1px solid ${variants[variant].borderColor}`,\n            backgroundColor: variants[variant].backgroundColor,\n            color: variants[variant].color,\n            display: 'flex',\n            alignItems: 'flex-start',\n            gap: '8px',\n            fontFamily: 'inherit'\n          };\n          \n          const contentStyles = {\n            flex: 1\n          };\n          \n          const titleStyles = {\n            fontWeight: '600',\n            marginBottom: '4px'\n          };\n          \n          const dismissButtonStyles = {\n            background: 'none',\n            border: 'none',\n            color: 'inherit',\n            cursor: 'pointer',\n            fontSize: '16px',\n            padding: '0',\n            marginLeft: '8px',\n            opacity: 0.7,\n            '&:hover': { opacity: 1 }\n          };\n          \n          return React.createElement('div', { style: alertStyles, ...props }, [\n            React.createElement('div', { key: 'content', style: contentStyles }, [\n              title && React.createElement('div', { key: 'title', style: titleStyles }, title),\n              React.createElement('div', { key: 'children' }, children)\n            ]),\n            dismissible && React.createElement('button', {\n              key: 'dismiss',\n              style: dismissButtonStyles,\n              onClick: onDismiss,\n              'aria-label': 'Dismiss'\n            }, '\xd7')\n          ]);\n        };\n      ",props:{children:"This is an informational alert message.",variant:"info",title:"Information",dismissible:!0},dependencies:[]}}}async generateBasicComponent(n){const e=n.toLowerCase();let t;for(const[i,s]of Object.entries(this.componentMap))if(e.includes(i)&&this.templates[s]){t=this.templates[s],console.log(`Matched phrase "${i}" to component "${s}"`);break}t||(e.includes("glow")||e.includes("glowing")?t=this.templates["glowing-button"]:e.includes("gradient")?t=this.templates["gradient-button"]:e.includes("outline")?t=this.templates["outline-button"]:e.includes("glass")?t=this.templates["glass-button"]:(e.includes("float")||e.includes("floating"))&&(t=this.templates["floating-button"])),t||(t=e.includes("button")?this.templates["gradient-button"]:e.includes("card")?this.templates.card:e.includes("input")||e.includes("form")||e.includes("field")?this.templates.input:e.includes("alert")||e.includes("notification")||e.includes("message")?this.templates.alert:this.templates["gradient-button"]),t||(t=this.templates["gradient-button"]);const o=this.customizeProps(t.props,n),r=t.code.trim().split("\n"),a=Math.min(...r.filter(n=>n.trim().length>0).map(n=>{var e;return(null===(e=n.match(/^(\s*)/))||void 0===e?void 0:e[1].length)||0})),l=r.map(n=>n.substring(a)).join("\n").trim();return{id:`component_${Date.now()}_${Math.random().toString(36).substr(2,5)}`,name:t.name,code:l,props:o,dependencies:t.dependencies,generatedAt:Date.now()}}customizeProps(n,e){const t={...n},o=e.toLowerCase();return o.includes("secondary")?t.variant="secondary":(o.includes("danger")||o.includes("delete")||o.includes("remove"))&&(t.variant="danger"),o.includes("small")?t.size="small":(o.includes("large")||o.includes("big"))&&(t.size="large"),o.includes("success")?(t.variant="success",t.children="Operation completed successfully!"):o.includes("warning")?(t.variant="warning",t.children="Please review this information carefully."):(o.includes("error")||o.includes("danger"))&&(t.variant="danger",t.children="An error occurred. Please try again."),o.includes("login")?t.children="Login":o.includes("submit")?t.children="Submit":o.includes("save")?t.children="Save":o.includes("cancel")&&(t.children="Cancel",t.variant="secondary"),t}getAvailableTemplates(){return Object.keys(this.templates)}getTemplateInfo(n){return this.templates[n]||null}}const r=new o,a=n=>r.generateBasicComponent(n)}}]);
//# sourceMappingURL=179.05793411.chunk.js.map