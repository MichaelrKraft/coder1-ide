"use strict";(self.webpackChunkcoder1_ide_source=self.webpackChunkcoder1_ide_source||[]).push([[916],{916:(e,n,t)=>{t.d(n,{default:()=>s});const s=class{generateDocumentation(e,n){const t=this.extractComponentName(e),s=this.extractPropsDocumentation(e),o=this.extractMethodsDocumentation(e),r=this.extractHooks(e),a=this.extractDependencies(e),i={name:t,description:this.generateDescription(t,s,o),category:this.inferCategory(t,e),props:s,methods:o,hooks:r,dependencies:a,examples:!1!==(null===n||void 0===n?void 0:n.includeExamples)?this.generateExamples(t,s):[]};return!1!==(null===n||void 0===n?void 0:n.includeBestPractices)&&(i.bestPractices=this.generateBestPractices(t,s,o)),!1!==(null===n||void 0===n?void 0:n.includeAccessibility)&&(i.accessibility=this.generateAccessibilityGuidelines(e)),!1!==(null===n||void 0===n?void 0:n.includePerformance)&&(i.performance=this.generatePerformanceGuidelines(e)),i.relatedComponents=this.findRelatedComponents(t,e),i}generateMarkdown(e){let n=`# ${e.name}\n\n`;return n+=`${e.description}\n\n`,e.category&&(n+=`**Category:** ${e.category}\n\n`),n+="## Table of Contents\n\n",n+="- [Props](#props)\n",e.methods.length>0&&(n+="- [Methods](#methods)\n"),e.examples.length>0&&(n+="- [Examples](#examples)\n"),e.bestPractices&&(n+="- [Best Practices](#best-practices)\n"),e.accessibility&&(n+="- [Accessibility](#accessibility)\n"),e.performance&&(n+="- [Performance](#performance)\n"),e.relatedComponents&&(n+="- [Related Components](#related-components)\n"),n+="\n",n+="## Props\n\n",e.props.length>0?(n+="| Prop | Type | Required | Default | Description |\n",n+="|------|------|----------|---------|-------------|\n",e.props.forEach(e=>{n+=`| \`${e.name}\` | \`${e.type}\` | ${e.required?"Yes":"No"} | ${e.defaultValue?`\`${e.defaultValue}\``:"-"} | ${e.description} |\n`}),n+="\n",e.props.forEach(e=>{e.examples&&e.examples.length>0&&(n+=`### ${e.name}\n\n`,n+=`${e.description}\n\n`,n+=`**Type:** \`${e.type}\`\n\n`,e.defaultValue&&(n+=`**Default:** \`${e.defaultValue}\`\n\n`),n+="**Examples:**\n\n",e.examples.forEach(e=>{n+=`\`\`\`jsx\n${e}\n\`\`\`\n\n`}))})):n+="This component has no props.\n\n",e.methods.length>0&&(n+="## Methods\n\n",e.methods.forEach(e=>{n+=`### ${e.name}\n\n`,n+=`${e.description}\n\n`,e.parameters.length>0&&(n+="**Parameters:**\n\n",e.parameters.forEach(e=>{n+=`- \`${e.name}\` (${e.type})${e.description?`: ${e.description}`:""}\n`}),n+="\n"),n+=`**Returns:** \`${e.returnType}\`\n\n`,e.examples&&e.examples.length>0&&(n+="**Examples:**\n\n",e.examples.forEach(e=>{n+=`\`\`\`javascript\n${e}\n\`\`\`\n\n`}))})),e.examples.length>0&&(n+="## Examples\n\n",e.examples.forEach(e=>{n+=`### ${e.title}\n\n`,e.description&&(n+=`${e.description}\n\n`),n+=`\`\`\`jsx\n${e.code}\n\`\`\`\n\n`})),e.bestPractices&&e.bestPractices.length>0&&(n+="## Best Practices\n\n",e.bestPractices.forEach(e=>{n+=`- ${e}\n`}),n+="\n"),e.accessibility&&e.accessibility.length>0&&(n+="## Accessibility\n\n",e.accessibility.forEach(e=>{n+=`- ${e}\n`}),n+="\n"),e.performance&&e.performance.length>0&&(n+="## Performance\n\n",e.performance.forEach(e=>{n+=`- ${e}\n`}),n+="\n"),e.relatedComponents&&e.relatedComponents.length>0&&(n+="## Related Components\n\n",e.relatedComponents.forEach(e=>{n+=`- [${e}](#${e.toLowerCase()})\n`}),n+="\n"),n+="---\n\n",n+=`*Documentation generated on ${(new Date).toLocaleDateString()}*\n`,n}generateJSDoc(e){let n="/**\n";if(n+=` * ${e.description}\n`,n+=" * \n",e.category&&(n+=` * @category ${e.category}\n`),n+=" * @component\n",e.props.forEach(e=>{n+=` * @param {${e.type}} ${e.required?"":"["}props.${e.name}${e.required?"":"]"} - ${e.description}`,e.defaultValue&&(n+=` (default: ${e.defaultValue})`),n+="\n"}),e.examples.length>0){n+=" * \n",n+=" * @example\n";e.examples[0].code.split("\n").forEach(e=>{n+=` * ${e}\n`})}return n+=" */",n}generateStorybookStories(e){let n="import type { Meta, StoryObj } from '@storybook/react';\n";return n+=`import ${e.name} from './${e.name}';\n\n`,n+=`const meta: Meta<typeof ${e.name}> = {\n`,n+=`  title: '${e.category||"Components"}/${e.name}',\n`,n+=`  component: ${e.name},\n`,n+="  parameters: {\n",n+="    layout: 'centered',\n",n+="    docs: {\n",n+="      description: {\n",n+=`        component: '${e.description}',\n`,n+="      },\n",n+="    },\n",n+="  },\n",n+="  tags: ['autodocs'],\n",e.props.length>0&&(n+="  argTypes: {\n",e.props.forEach(e=>{n+=`    ${e.name}: {\n`,n+=`      description: '${e.description}',\n`,n+=`      control: { type: '${this.getStorybookControlType(e.type)}' },\n`,e.defaultValue&&(n+=`      defaultValue: ${e.defaultValue},\n`),n+="    },\n"}),n+="  },\n"),n+="};\n\n",n+="export default meta;\n",n+="type Story = StoryObj<typeof meta>;\n\n",n+="export const Default: Story = {\n",n+="  args: {\n",e.props.forEach(e=>{e.defaultValue&&(n+=`    ${e.name}: ${e.defaultValue},\n`)}),n+="  },\n",n+="};\n\n",e.examples.forEach((e,t)=>{const s=e.title.replace(/\s+/g,"");n+=`export const ${s}: Story = {\n`,n+="  args: {\n";const o=this.extractPropsFromExample(e.code);Object.entries(o).forEach(e=>{let[t,s]=e;n+=`    ${t}: ${JSON.stringify(s)},\n`}),n+="  },\n",n+="};\n\n"}),n}extractComponentName(e){const n=[/(?:const|let|var)\s+(\w+)\s*=/,/function\s+(\w+)/,/class\s+(\w+)/,/export\s+default\s+(?:function|class)?\s*(\w+)/];for(const t of n){const n=e.match(t);if(n&&n[1])return n[1]}return"Component"}extractPropsDocumentation(e){const n=[],t=e.match(/interface\s+\w+Props\s*{([^}]*)}/),s=e.match(/type\s+\w+Props\s*=\s*{([^}]*)}/),o=(null===t||void 0===t?void 0:t[1])||(null===s||void 0===s?void 0:s[1]);if(o){o.split(/[;,]\s*/).forEach(e=>{const t=e.match(/(\w+)(\?)?\s*:\s*([^;,]+)/);if(t){const[,e,s,o]=t;n.push({name:e,type:o.trim(),required:!s,description:this.generatePropDescription(e,o),examples:this.generatePropExamples(e,o)})}})}else{const t=e.match(/\({\s*([^}]+)\s*}\)/);if(t){t[1].split(",").forEach(e=>{const[t,s]=e.trim().split("=").map(e=>e.trim());t&&n.push({name:t,type:"any",required:!s,defaultValue:s,description:this.generatePropDescription(t,"any")})})}}return n}extractMethodsDocumentation(e){const n=[],t=/const\s+(\w+)\s*=\s*\(([^)]*)\)\s*=>/g;let s;for(;null!==(s=t.exec(e));){const[,e,t]=s;if(e.startsWith("use"))continue;const o=t?t.split(",").map(e=>{const n=e.trim().split(":")[0].trim();return{name:n,type:"any",description:`Parameter ${n}`}}):[];n.push({name:e,parameters:o,returnType:"void",description:this.generateMethodDescription(e)})}return n}extractHooks(e){const n=e.match(/use[A-Z]\w*/g);return n?Array.from(new Set(n)):[]}extractDependencies(e){const n=[],t=/import\s+.*?\s+from\s+['"]([^'"]+)['"]/g;let s;for(;null!==(s=t.exec(e));){const[,e]=s;e.startsWith(".")||e.startsWith("/")||n.push(e)}return n}generateDescription(e,n,t){let s=`${e} is a React component`;n.length>0&&(s+=` that accepts ${n.length} prop${n.length>1?"s":""}`),t.length>0&&(s+=` and provides ${t.length} method${t.length>1?"s":""}`),s+=".";const o=e.toLowerCase();return o.includes("button")?s+=" It renders an interactive button element.":o.includes("form")?s+=" It handles form inputs and submission.":o.includes("modal")?s+=" It displays content in a modal overlay.":o.includes("list")&&(s+=" It renders a list of items."),s}inferCategory(e,n){const t=e.toLowerCase();return t.includes("button")||t.includes("link")?"Actions":t.includes("form")||t.includes("input")?"Forms":t.includes("modal")||t.includes("dialog")?"Overlays":t.includes("nav")||t.includes("menu")?"Navigation":t.includes("card")||t.includes("list")?"Data Display":t.includes("layout")||t.includes("grid")?"Layout":"Components"}generatePropDescription(e,n){return{className:"Additional CSS class names to apply",style:"Inline styles to apply to the component",children:"Child elements to render inside the component",onClick:"Handler function called when the component is clicked",onChange:"Handler function called when the value changes",disabled:"Whether the component is disabled",value:"The current value of the component",placeholder:"Placeholder text to display",title:"Title text to display",variant:"Visual variant of the component",size:"Size variant of the component",color:"Color scheme of the component",loading:"Whether the component is in a loading state",error:"Error message to display",onSubmit:"Handler function called on form submission"}[e]||`The ${e} prop of type ${n}`}generatePropExamples(e,n){const t=[];return n.includes("string")?(t.push(`${e}="example"`),t.push(`${e}="Another example"`)):n.includes("number")?(t.push(`${e}={42}`),t.push(`${e}={100}`)):n.includes("boolean")?(t.push(`${e}`),t.push(`${e}={false}`)):n.includes("function")&&(t.push(`${e}={() => console.log('Clicked')}`),t.push(`${e}={handleClick}`)),t}generateMethodDescription(e){return{handleClick:"Handles click events on the component",handleSubmit:"Handles form submission",handleChange:"Handles value changes",validate:"Validates the component state",reset:"Resets the component to its initial state",toggle:"Toggles the component state",open:"Opens the component",close:"Closes the component"}[e]||`${e} method`}generateExamples(e,n){const t=[];if(t.push({title:"Basic Usage",description:`Basic example of ${e} component`,code:`<${e} />`}),n.length>0){const s=n.slice(0,3).map(e=>`  ${e.name}="${e.name}-value}"`).join("\n");t.push({title:"With Props",description:"Example with common props",code:`<${e}\n${s}\n/>`})}return t.push({title:"Advanced Usage",description:"Advanced example with event handlers",code:`<${e}\n  onClick={() => console.log('Clicked')}\n  onHover={() => console.log('Hovered')}\n>\n  Content goes here\n</${e}>`}),t}generateBestPractices(e,n,t){const s=[];return s.push(`Always provide a unique key when rendering ${e} in a list`),s.push(`Use memoization (React.memo) if ${e} renders frequently`),n.some(e=>"onClick"===e.name||"onChange"===e.name)&&s.push("Use useCallback for event handlers to prevent unnecessary re-renders"),n.some(e=>e.required)&&s.push("Always provide required props to avoid runtime errors"),s.push("Consider using TypeScript for better type safety"),s.push("Test the component with different prop combinations"),s}generateAccessibilityGuidelines(e){const n=[];return(e.includes("button")||e.includes("Button"))&&(n.push("Ensure all buttons have accessible labels"),n.push("Support keyboard navigation (Enter and Space keys)")),(e.includes("input")||e.includes("Input"))&&(n.push("Associate labels with form inputs"),n.push("Provide clear error messages")),n.push("Include proper ARIA attributes when necessary"),n.push("Ensure sufficient color contrast (4.5:1 for normal text)"),n.push("Test with screen readers"),n.push("Support keyboard-only navigation"),n}generatePerformanceGuidelines(e){const n=[];return e.includes("map(")&&n.push("Use unique and stable keys when rendering lists"),(e.includes("useState")||e.includes("useEffect"))&&(n.push("Optimize state updates to prevent unnecessary re-renders"),n.push("Clean up effects to prevent memory leaks")),n.push("Consider lazy loading for heavy components"),n.push("Use React.memo for pure components"),n.push("Optimize images and assets"),n.push("Debounce or throttle expensive operations"),n}findRelatedComponents(e,n){const t=[],s=/import\s+(\w+)\s+from\s+['"]\.\//g;let o;for(;null!==(o=s.exec(n));){const[,n]=o;n!==e&&t.push(n)}const r=e.toLowerCase();return r.includes("button")?t.push("ButtonGroup","IconButton"):r.includes("input")&&t.push("Form","FormField","Label"),Array.from(new Set(t))}getStorybookControlType(e){return e.includes("boolean")?"boolean":e.includes("number")?"number":e.includes("string")?"text":e.includes("function")?"action":e.includes("array")?"array":e.includes("object")?"object":"text"}extractPropsFromExample(e){const n={},t=/(\w+)=(?:{([^}]+)}|"([^"]+)")/g;let s;for(;null!==(s=t.exec(e));){const[,e,t,o]=s;n[e]=o||t}return n}}}}]);
//# sourceMappingURL=916.fd568744.chunk.js.map