{"version":3,"file":"static/js/969.cdf6ee6d.chunk.js","mappings":"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","sources":["../FitAddon/webpack/universalModuleDefinition","../FitAddon/src/FitAddon.ts","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/globals.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport type { Terminal, ITerminalAddon } from '@xterm/xterm';\nimport type { FitAddon as IFitApi } from '@xterm/addon-fit';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon , IFitApi {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["t","self","FitAddon","activate","e","this","_terminal","dispose","fit","proposeDimensions","isNaN","cols","rows","_core","_renderService","clear","resize","element","parentElement","dimensions","css","cell","width","height","r","options","scrollback","viewport","scrollBarWidth","i","window","getComputedStyle","o","parseInt","getPropertyValue","s","Math","max","n","l","a","floor","module","exports","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","nextTick","Promise","resolve","cb","setTimeoutFn","globalThisShim","Function","pick","_len","arguments","attr","Array","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","str","c","utf8Length","ceil","randomString","Date","now","random","TransportError","Error","constructor","reason","description","context","super","Transport","Emitter","writable","query","socket","forceBase64","onError","emitReserved","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","encodeURIComponent","Polling","_polling","name","_poll","total","once","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","push","encodePayload","count","join","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","fn","req","request","method","on","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","splice","queryKey","$0","$1","$2","withEventListeners","removeEventListener","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","_beforeunloadEventListener","transport","removeAllListeners","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","_hasPingExpired","hasExpired","msg","compress","cleanupAndClose","off","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","removeListener","_filterUpgrades","upgrades","filteredUpgrades","Socket","map","DEFAULT_TRANSPORTS","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","args","emit","apply","_b","_c","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","_this","ackTimeout","timer","_len3","_key3","withError","emitWithAck","_len4","_key4","reject","arg1","arg2","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listeners","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","factor","jitter","attempts","duration","rand","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}