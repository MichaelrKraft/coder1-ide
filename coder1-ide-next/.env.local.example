# ============================================
# CODER1 IDE - UNIFIED SERVER ARCHITECTURE âœ¨
# ============================================
# SIMPLIFIED: Single unified server handles everything!
# 
# UNIFIED NEXT.JS CUSTOM SERVER (Port 3001):
#    âœ… Next.js UI (the IDE interface)
#    âœ… Terminal PTY (integrated terminal functionality) 
#    âœ… WebSocket via Socket.IO
#    âœ… File operations API
#    âœ… Context Folders API
#    âœ… StatusBar with Brain icon
#    âœ… Session management
#    âœ… Enhanced tmux integration ready
#
#    Start with: npm run dev:unified
#
# ACCESS THE IDE AT: http://localhost:3001/ide
# ============================================

# Unified Server Configuration (Single port for everything!)
NEXT_PUBLIC_API_URL=http://localhost:3001
NEXT_PUBLIC_UNIFIED_SERVER_URL=http://localhost:3001
PORT=3001

# WebSocket Connection (Same server via Socket.IO)
NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:3001

# ============================================
# Claude CLI Integration - NO API KEYS NEEDED!
# ============================================
# Install Claude Code CLI from https://claude.ai/code
# The system will auto-detect the CLI location
# Only set this if Claude CLI is in a custom location
CLAUDE_CLI_PATH=

# Memory persistence database location
DATABASE_URL=sqlite://./data/coder1-memory.db

# ============================================
# Authentication & OAuth
# ============================================
# Google OAuth
# Get these from https://console.cloud.google.com/
# 1. Create a new project or select existing
# 2. Enable Google+ API
# 3. Create OAuth 2.0 credentials
# 4. Add authorized redirect URI: http://localhost:3001/api/v2/auth/google/callback
NEXT_PUBLIC_GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# JWT Secrets (generate random strings)
JWT_SECRET=your-jwt-secret-key-here
JWT_REFRESH_SECRET=your-jwt-refresh-secret-key-here

# ============================================
# Feature Flags
# ============================================
NEXT_PUBLIC_ENABLE_AI_CONSULTATION=true
NEXT_PUBLIC_ENABLE_AGENT_DASHBOARD=true
NEXT_PUBLIC_ENABLE_TWEAKCC=false
NEXT_PUBLIC_ENABLE_CONTAINERS=false

# ============================================
# Claude CLI Puppeteer (TRUE Agent Automation) ðŸŽ­
# ============================================
# Enables real AI agent automation using Claude CLI instances
# Set to true to enable cost-free multi-agent parallel execution
ENABLE_CLI_PUPPETEER=false

# Claude CLI binary path (auto-detected if not specified)
CLAUDE_CLI_PATH=

# Agent execution limits
MAX_PARALLEL_AGENTS=5
MAX_WORKFLOW_TIME=600000

# Agent behavior settings  
AGENT_RESPONSE_TIMEOUT=30000
AGENT_SETUP_TIMEOUT=10000
AGENT_IDLE_TIMEOUT=300000

# Work tree configuration for git isolation
ENABLE_WORK_TREES=true
WORK_TREE_BASE_DIR=./agent-workspaces

# Debug and logging
CLI_PUPPETEER_DEBUG=false
CLI_PUPPETEER_LOG_LEVEL=info

# ============================================
# Development Settings
# ============================================
NODE_ENV=development
NEXT_TELEMETRY_DISABLED=1

# ============================================
# Beta Multi-AI Platform Support ðŸš€
# ============================================
# Enable Beta route with multi-AI features
NEXT_PUBLIC_ENABLE_BETA_ROUTE=false

# Multi-AI Platform Detection
ENABLE_MULTI_AI_DETECTION=false
AI_PLATFORM_CACHE_DURATION=300000

# Supported AI CLI Platforms (comma-separated)
# Options: claude,openai,github-copilot,aider,continue,codeium,cursor,ollama
ENABLED_AI_PLATFORMS=claude,openai,github-copilot,aider

# Default AI Platform (if multiple are available)
DEFAULT_AI_PLATFORM=claude

# Universal AI Memory Layer
ENABLE_UNIVERSAL_MEMORY=false
MAX_MEMORY_CONTEXT_TOKENS=2000
MEMORY_RETENTION_DAYS=30

# AI Platform API Keys (for platforms that need them)
# Note: Some CLIs use their own auth (e.g., gh auth login for GitHub Copilot)
OPENAI_API_KEY=
ANTHROPIC_API_KEY=

# Local AI Support (Ollama)
OLLAMA_HOST=http://localhost:11434
OLLAMA_DEFAULT_MODEL=codellama

# Smart Context Injection
ENABLE_SMART_CONTEXT=true
CONTEXT_RELEVANCE_THRESHOLD=0.7
MAX_CONTEXT_CHUNKS=3

# AI Arbitrage Settings (route to cheapest capable model)
ENABLE_AI_ARBITRAGE=false
COST_OPTIMIZATION_LEVEL=balanced

# Beta Features Analytics
ENABLE_BETA_ANALYTICS=false
BETA_ANALYTICS_ENDPOINT=